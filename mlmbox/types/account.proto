syntax = "proto3";

package mlmbox.types;
import "mlmbox/types/asset.proto";
import "mlmbox/types/relationship.proto";
import "mlmbox/types/google_authenticator.proto";

message Account {
  message Id {
    oneof unique_field {
      uint32 account_id = 1;
      string account_login = 2;
      string ref_link_id = 3;
    }
  }
  message RefLink {
    uint32 account_id = 1;
    uint32 source_id = 2;
  }
  message Username {
    uint32 id = 1;
    string login = 2;
    string ref_link_id = 3;
  }
  message Profile {
    message Ava {
      uint32 collection_id = 1;
      uint32 entity_id = 2;
    }
    message Telegram {
      uint64 id = 1;
      string username = 2;
    }
    string first_name = 1;
    string last_name = 2;
    Telegram telegram = 3;
    Ava ava = 4;
  }
  message Statistics {
    uint32 partners_quantity = 1;
    uint32 team_quantity = 2;
    uint32 matrix_partners_quantity = 3;
    uint32 matrix_team_quantity = 4;
  }
  message Info {
    message List {
      repeated mlmbox.types.Account.Info items = 1;
    }
    Profile profile = 1;
    Username account = 2;
    Username referral = 3;
    mlmbox.types.Relationship relationship = 4;
    uint32 registration_at = 5;
    uint32 matrix_started_at = 6;
    int32 matrix_tree_ids_bit_mask = 7;
    uint32 referral_branch = 8;
    Statistics statistics = 9;
  }
  Info info = 1;
  mlmbox.types.GoogleAuthenticator google_authenticator = 2;
  repeated mlmbox.types.Matrix.TreeAccount matrix_tree_accounts = 3;
  string locale = 5; // language identifier (en-US, ...)
  bool is_admin = 6;
}

message Matrix {
  message Group {
    uint32 id = 1;
    string title = 2;
  }
  message Tree {
    uint32 id = 1;
    string title = 2;
    uint32 group_id = 3;
    uint32 positions_quantity = 4;
    uint32 default_position_width = 5;
    mlmbox.types.Asset.Amount amount = 6;
  }
  message Position {
    message Id {
      uint32 view_position_id = 1;
    }
    uint32 position_id = 1; // Position identifier
    uint32 position_ref_id = 2; // Superior position identifier
    uint32 position_ref_line = 3; // Upstream branch identifier
    uint32 position_width = 4; // Number of available branches
    uint32 account_id = 5; // Account identifier
    uint32 tree_account_id = 6; // Sequence number in the (tree + account) combination
    bool reinvest_enabled = 7;
  }
  message TreeAccount {
    message List {
      repeated mlmbox.types.Matrix.TreeAccount items = 1;
    }
    message Entity {
      uint32 tree_account_id = 1; // Sequence number in the (tree + account) combination
      uint32 position_id = 2; // Position identifier
      bool filled = 3; // Is the position filled?
      bool view_access = 4; // Access to the view
    }
    message Set {
      uint32 tree_id = 1;
      Entity entity = 2;
      int32 filled_2w2l_bit_mask = 3;
    }
    uint32 tree_id = 1;
    repeated Entity entities = 4;
  }
  message View {
    message Request {
      message ByTreeAccount {
        uint32 tree_id = 1;
        uint32 account_id = 2;
      }
      uint32 view_level = 1;
      oneof query {
        uint32 view_position_id = 2;
        ByTreeAccount tree_account_id = 3;
      }
    }
    uint32 tree_id = 1;
    uint32 self_position_id = 2;
    uint32 view_position_id = 3;
    repeated Position positions = 4;
    repeated mlmbox.types.Account.Info accounts = 5;
    repeated TreeAccount.Entity view_tree_account_entities = 6;
    int32 self_matrix_tree_ids_bit_mask = 7;
    int32 view_matrix_tree_ids_bit_mask = 8;
  }
  message Invoice {
    message Request {
      uint32 tree_id = 1;
    }
    message PreviewResponse {
      message Item {
        uint32 tree_id = 1;
        uint32 asset_id = 2;
        string price_value = 3;
        string unlock_value = 4;
        string amount_value = 5;
      }
      repeated Item items = 1;
      repeated mlmbox.types.Asset.Amount bill_amounts = 2;
    }
    message VerifiedResponse {
      message Item {
        uint32 tree_id = 1;
        uint32 tree_account_id = 2;
        uint32 position_id = 3;
      }
      repeated Item items = 1;
    }
  }
  message Config {
    message Reinvest {
      uint32 position_id = 1;
      bool reinvest_enabled = 2;
    }
  }
  repeated Group groups = 1;
  repeated Tree trees = 2;
  repeated TreeAccount tree_accounts = 3;
}