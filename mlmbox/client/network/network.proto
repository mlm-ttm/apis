syntax = "proto3";

package mlmbox.client.network;

import "mlmbox/types/account.proto";
import "mlmbox/types/sort.proto";

service Network {
  rpc MemberGet (mlmbox.types.Account.Id) returns (mlmbox.types.Account.Info) {} // Display the data of the selected user in the system (global access)
  rpc MemberSearch (AccountsSearchRequest) returns (mlmbox.types.Account.Info.List) {} // Search for users in the system with a matching login prefix (global access)
  rpc TeamInfo (TeamRequest) returns (TeamResponse) {} // Display the data of the selected user (+personally invited partners) in the system (access via personal referral structure)
  rpc TeamSearch (AccountsSearchRequest) returns (mlmbox.types.Account.Info.List) {} // Search for users in the system with a matching login prefix (access via personal referral structure)
  rpc TeamPartnerList (TeamPartnerListRequest) returns (mlmbox.types.Account.Info.List) {} // Display a list of personally invited partners of the selected user (access via personal referral structure)
}

message AccountsSearchRequest {
  string login_prefix = 1;
  uint32 limit = 2;
}
message TeamRequest {
  mlmbox.types.Account.Id view_partner = 1;
  mlmbox.types.Sort partners_sort = 2;
  int32 filter_matrix_tree_ids_bit_mask = 3;
}
message TeamResponse {
  mlmbox.types.Account.Info account = 1;
  repeated mlmbox.types.Account.Info partners = 2;
  repeated mlmbox.types.Account.Info referrals = 3;
  repeated mlmbox.types.Matrix.TreeAccount.Set account_matrix_tree_accounts = 4;
}
message TeamPartnerListRequest {
  TeamRequest request = 1;
  uint32 step_referral_branch = 2;
}
