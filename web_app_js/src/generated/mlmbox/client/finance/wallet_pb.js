// source: mlmbox/client/finance/wallet.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var google_protobuf_empty_pb = require('google-protobuf/google/protobuf/empty_pb.js');
goog.object.extend(proto, google_protobuf_empty_pb);
var mlmbox_types_account_pb = require('../../../mlmbox/types/account_pb.js');
goog.object.extend(proto, mlmbox_types_account_pb);
var mlmbox_types_asset_pb = require('../../../mlmbox/types/asset_pb.js');
goog.object.extend(proto, mlmbox_types_asset_pb);
var mlmbox_types_sort_pb = require('../../../mlmbox/types/sort_pb.js');
goog.object.extend(proto, mlmbox_types_sort_pb);
var mlmbox_types_wallet_pb = require('../../../mlmbox/types/wallet_pb.js');
goog.object.extend(proto, mlmbox_types_wallet_pb);
goog.exportSymbol('proto.mlmbox.client.finance.TransferRequest', null, global);
goog.exportSymbol('proto.mlmbox.client.finance.WalletAssetGetRequest', null, global);
goog.exportSymbol('proto.mlmbox.client.finance.WalletAssetTransactionListRequest', null, global);
goog.exportSymbol('proto.mlmbox.client.finance.WalletDepositAddressResponse', null, global);
goog.exportSymbol('proto.mlmbox.client.finance.WalletValidateAddressRequest', null, global);
goog.exportSymbol('proto.mlmbox.client.finance.WalletValidateAddressResponse', null, global);
goog.exportSymbol('proto.mlmbox.client.finance.WalletWithdrawalRequest', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.client.finance.WalletAssetGetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mlmbox.client.finance.WalletAssetGetRequest.repeatedFields_, null);
};
goog.inherits(proto.mlmbox.client.finance.WalletAssetGetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.client.finance.WalletAssetGetRequest.displayName = 'proto.mlmbox.client.finance.WalletAssetGetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.client.finance.WalletAssetTransactionListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mlmbox.client.finance.WalletAssetTransactionListRequest.repeatedFields_, null);
};
goog.inherits(proto.mlmbox.client.finance.WalletAssetTransactionListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.client.finance.WalletAssetTransactionListRequest.displayName = 'proto.mlmbox.client.finance.WalletAssetTransactionListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.client.finance.WalletDepositAddressResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.client.finance.WalletDepositAddressResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.client.finance.WalletDepositAddressResponse.displayName = 'proto.mlmbox.client.finance.WalletDepositAddressResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.client.finance.TransferRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.client.finance.TransferRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.client.finance.TransferRequest.displayName = 'proto.mlmbox.client.finance.TransferRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.client.finance.WalletValidateAddressRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.client.finance.WalletValidateAddressRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.client.finance.WalletValidateAddressRequest.displayName = 'proto.mlmbox.client.finance.WalletValidateAddressRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.client.finance.WalletValidateAddressResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.client.finance.WalletValidateAddressResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.client.finance.WalletValidateAddressResponse.displayName = 'proto.mlmbox.client.finance.WalletValidateAddressResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.client.finance.WalletWithdrawalRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.client.finance.WalletWithdrawalRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.client.finance.WalletWithdrawalRequest.displayName = 'proto.mlmbox.client.finance.WalletWithdrawalRequest';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mlmbox.client.finance.WalletAssetGetRequest.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.client.finance.WalletAssetGetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.client.finance.WalletAssetGetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.client.finance.WalletAssetGetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.client.finance.WalletAssetGetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sortTransactions: (f = msg.getSortTransactions()) && mlmbox_types_sort_pb.Sort.toObject(includeInstance, f),
    filterKindIdsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.client.finance.WalletAssetGetRequest}
 */
proto.mlmbox.client.finance.WalletAssetGetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.client.finance.WalletAssetGetRequest;
  return proto.mlmbox.client.finance.WalletAssetGetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.client.finance.WalletAssetGetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.client.finance.WalletAssetGetRequest}
 */
proto.mlmbox.client.finance.WalletAssetGetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAssetId(value);
      break;
    case 2:
      var value = new mlmbox_types_sort_pb.Sort;
      reader.readMessage(value,mlmbox_types_sort_pb.Sort.deserializeBinaryFromReader);
      msg.setSortTransactions(value);
      break;
    case 3:
      var values = /** @type {!Array<!proto.mlmbox.types.Wallet.Asset.Transaction.Kind.Id>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFilterKindIds(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.client.finance.WalletAssetGetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.client.finance.WalletAssetGetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.client.finance.WalletAssetGetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.client.finance.WalletAssetGetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSortTransactions();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      mlmbox_types_sort_pb.Sort.serializeBinaryToWriter
    );
  }
  f = message.getFilterKindIdsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      3,
      f
    );
  }
};


/**
 * optional uint32 asset_id = 1;
 * @return {number}
 */
proto.mlmbox.client.finance.WalletAssetGetRequest.prototype.getAssetId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.client.finance.WalletAssetGetRequest} returns this
 */
proto.mlmbox.client.finance.WalletAssetGetRequest.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional mlmbox.types.Sort sort_transactions = 2;
 * @return {?proto.mlmbox.types.Sort}
 */
proto.mlmbox.client.finance.WalletAssetGetRequest.prototype.getSortTransactions = function() {
  return /** @type{?proto.mlmbox.types.Sort} */ (
    jspb.Message.getWrapperField(this, mlmbox_types_sort_pb.Sort, 2));
};


/**
 * @param {?proto.mlmbox.types.Sort|undefined} value
 * @return {!proto.mlmbox.client.finance.WalletAssetGetRequest} returns this
*/
proto.mlmbox.client.finance.WalletAssetGetRequest.prototype.setSortTransactions = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.client.finance.WalletAssetGetRequest} returns this
 */
proto.mlmbox.client.finance.WalletAssetGetRequest.prototype.clearSortTransactions = function() {
  return this.setSortTransactions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.client.finance.WalletAssetGetRequest.prototype.hasSortTransactions = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated mlmbox.types.Wallet.Asset.Transaction.Kind.Id filter_kind_ids = 3;
 * @return {!Array<!proto.mlmbox.types.Wallet.Asset.Transaction.Kind.Id>}
 */
proto.mlmbox.client.finance.WalletAssetGetRequest.prototype.getFilterKindIdsList = function() {
  return /** @type {!Array<!proto.mlmbox.types.Wallet.Asset.Transaction.Kind.Id>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<!proto.mlmbox.types.Wallet.Asset.Transaction.Kind.Id>} value
 * @return {!proto.mlmbox.client.finance.WalletAssetGetRequest} returns this
 */
proto.mlmbox.client.finance.WalletAssetGetRequest.prototype.setFilterKindIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {!proto.mlmbox.types.Wallet.Asset.Transaction.Kind.Id} value
 * @param {number=} opt_index
 * @return {!proto.mlmbox.client.finance.WalletAssetGetRequest} returns this
 */
proto.mlmbox.client.finance.WalletAssetGetRequest.prototype.addFilterKindIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mlmbox.client.finance.WalletAssetGetRequest} returns this
 */
proto.mlmbox.client.finance.WalletAssetGetRequest.prototype.clearFilterKindIdsList = function() {
  return this.setFilterKindIdsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mlmbox.client.finance.WalletAssetTransactionListRequest.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.client.finance.WalletAssetTransactionListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.client.finance.WalletAssetTransactionListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.client.finance.WalletAssetTransactionListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.client.finance.WalletAssetTransactionListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    assetId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    stepTransactionId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    sortTransactions: (f = msg.getSortTransactions()) && mlmbox_types_sort_pb.Sort.toObject(includeInstance, f),
    filterKindIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.client.finance.WalletAssetTransactionListRequest}
 */
proto.mlmbox.client.finance.WalletAssetTransactionListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.client.finance.WalletAssetTransactionListRequest;
  return proto.mlmbox.client.finance.WalletAssetTransactionListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.client.finance.WalletAssetTransactionListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.client.finance.WalletAssetTransactionListRequest}
 */
proto.mlmbox.client.finance.WalletAssetTransactionListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAssetId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStepTransactionId(value);
      break;
    case 3:
      var value = new mlmbox_types_sort_pb.Sort;
      reader.readMessage(value,mlmbox_types_sort_pb.Sort.deserializeBinaryFromReader);
      msg.setSortTransactions(value);
      break;
    case 4:
      var values = /** @type {!Array<!proto.mlmbox.types.Wallet.Asset.Transaction.Kind.Id>} */ (reader.isDelimited() ? reader.readPackedEnum() : [reader.readEnum()]);
      for (var i = 0; i < values.length; i++) {
        msg.addFilterKindIds(values[i]);
      }
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.client.finance.WalletAssetTransactionListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.client.finance.WalletAssetTransactionListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.client.finance.WalletAssetTransactionListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.client.finance.WalletAssetTransactionListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAssetId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getStepTransactionId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getSortTransactions();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      mlmbox_types_sort_pb.Sort.serializeBinaryToWriter
    );
  }
  f = message.getFilterKindIdsList();
  if (f.length > 0) {
    writer.writePackedEnum(
      4,
      f
    );
  }
};


/**
 * optional uint32 asset_id = 1;
 * @return {number}
 */
proto.mlmbox.client.finance.WalletAssetTransactionListRequest.prototype.getAssetId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.client.finance.WalletAssetTransactionListRequest} returns this
 */
proto.mlmbox.client.finance.WalletAssetTransactionListRequest.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 step_transaction_id = 2;
 * @return {number}
 */
proto.mlmbox.client.finance.WalletAssetTransactionListRequest.prototype.getStepTransactionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.client.finance.WalletAssetTransactionListRequest} returns this
 */
proto.mlmbox.client.finance.WalletAssetTransactionListRequest.prototype.setStepTransactionId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional mlmbox.types.Sort sort_transactions = 3;
 * @return {?proto.mlmbox.types.Sort}
 */
proto.mlmbox.client.finance.WalletAssetTransactionListRequest.prototype.getSortTransactions = function() {
  return /** @type{?proto.mlmbox.types.Sort} */ (
    jspb.Message.getWrapperField(this, mlmbox_types_sort_pb.Sort, 3));
};


/**
 * @param {?proto.mlmbox.types.Sort|undefined} value
 * @return {!proto.mlmbox.client.finance.WalletAssetTransactionListRequest} returns this
*/
proto.mlmbox.client.finance.WalletAssetTransactionListRequest.prototype.setSortTransactions = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.client.finance.WalletAssetTransactionListRequest} returns this
 */
proto.mlmbox.client.finance.WalletAssetTransactionListRequest.prototype.clearSortTransactions = function() {
  return this.setSortTransactions(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.client.finance.WalletAssetTransactionListRequest.prototype.hasSortTransactions = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated mlmbox.types.Wallet.Asset.Transaction.Kind.Id filter_kind_ids = 4;
 * @return {!Array<!proto.mlmbox.types.Wallet.Asset.Transaction.Kind.Id>}
 */
proto.mlmbox.client.finance.WalletAssetTransactionListRequest.prototype.getFilterKindIdsList = function() {
  return /** @type {!Array<!proto.mlmbox.types.Wallet.Asset.Transaction.Kind.Id>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<!proto.mlmbox.types.Wallet.Asset.Transaction.Kind.Id>} value
 * @return {!proto.mlmbox.client.finance.WalletAssetTransactionListRequest} returns this
 */
proto.mlmbox.client.finance.WalletAssetTransactionListRequest.prototype.setFilterKindIdsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!proto.mlmbox.types.Wallet.Asset.Transaction.Kind.Id} value
 * @param {number=} opt_index
 * @return {!proto.mlmbox.client.finance.WalletAssetTransactionListRequest} returns this
 */
proto.mlmbox.client.finance.WalletAssetTransactionListRequest.prototype.addFilterKindIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mlmbox.client.finance.WalletAssetTransactionListRequest} returns this
 */
proto.mlmbox.client.finance.WalletAssetTransactionListRequest.prototype.clearFilterKindIdsList = function() {
  return this.setFilterKindIdsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.client.finance.WalletDepositAddressResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.client.finance.WalletDepositAddressResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.client.finance.WalletDepositAddressResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.client.finance.WalletDepositAddressResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.client.finance.WalletDepositAddressResponse}
 */
proto.mlmbox.client.finance.WalletDepositAddressResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.client.finance.WalletDepositAddressResponse;
  return proto.mlmbox.client.finance.WalletDepositAddressResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.client.finance.WalletDepositAddressResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.client.finance.WalletDepositAddressResponse}
 */
proto.mlmbox.client.finance.WalletDepositAddressResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.client.finance.WalletDepositAddressResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.client.finance.WalletDepositAddressResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.client.finance.WalletDepositAddressResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.client.finance.WalletDepositAddressResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.mlmbox.client.finance.WalletDepositAddressResponse.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.client.finance.WalletDepositAddressResponse} returns this
 */
proto.mlmbox.client.finance.WalletDepositAddressResponse.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.client.finance.TransferRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.client.finance.TransferRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.client.finance.TransferRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.client.finance.TransferRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: (f = msg.getAccount()) && mlmbox_types_account_pb.Account.Id.toObject(includeInstance, f),
    operationAmount: (f = msg.getOperationAmount()) && mlmbox_types_asset_pb.Asset.Amount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.client.finance.TransferRequest}
 */
proto.mlmbox.client.finance.TransferRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.client.finance.TransferRequest;
  return proto.mlmbox.client.finance.TransferRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.client.finance.TransferRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.client.finance.TransferRequest}
 */
proto.mlmbox.client.finance.TransferRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mlmbox_types_account_pb.Account.Id;
      reader.readMessage(value,mlmbox_types_account_pb.Account.Id.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    case 2:
      var value = new mlmbox_types_asset_pb.Asset.Amount;
      reader.readMessage(value,mlmbox_types_asset_pb.Asset.Amount.deserializeBinaryFromReader);
      msg.setOperationAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.client.finance.TransferRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.client.finance.TransferRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.client.finance.TransferRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.client.finance.TransferRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mlmbox_types_account_pb.Account.Id.serializeBinaryToWriter
    );
  }
  f = message.getOperationAmount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      mlmbox_types_asset_pb.Asset.Amount.serializeBinaryToWriter
    );
  }
};


/**
 * optional mlmbox.types.Account.Id account = 1;
 * @return {?proto.mlmbox.types.Account.Id}
 */
proto.mlmbox.client.finance.TransferRequest.prototype.getAccount = function() {
  return /** @type{?proto.mlmbox.types.Account.Id} */ (
    jspb.Message.getWrapperField(this, mlmbox_types_account_pb.Account.Id, 1));
};


/**
 * @param {?proto.mlmbox.types.Account.Id|undefined} value
 * @return {!proto.mlmbox.client.finance.TransferRequest} returns this
*/
proto.mlmbox.client.finance.TransferRequest.prototype.setAccount = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.client.finance.TransferRequest} returns this
 */
proto.mlmbox.client.finance.TransferRequest.prototype.clearAccount = function() {
  return this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.client.finance.TransferRequest.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional mlmbox.types.Asset.Amount operation_amount = 2;
 * @return {?proto.mlmbox.types.Asset.Amount}
 */
proto.mlmbox.client.finance.TransferRequest.prototype.getOperationAmount = function() {
  return /** @type{?proto.mlmbox.types.Asset.Amount} */ (
    jspb.Message.getWrapperField(this, mlmbox_types_asset_pb.Asset.Amount, 2));
};


/**
 * @param {?proto.mlmbox.types.Asset.Amount|undefined} value
 * @return {!proto.mlmbox.client.finance.TransferRequest} returns this
*/
proto.mlmbox.client.finance.TransferRequest.prototype.setOperationAmount = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.client.finance.TransferRequest} returns this
 */
proto.mlmbox.client.finance.TransferRequest.prototype.clearOperationAmount = function() {
  return this.setOperationAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.client.finance.TransferRequest.prototype.hasOperationAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.client.finance.WalletValidateAddressRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.client.finance.WalletValidateAddressRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.client.finance.WalletValidateAddressRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.client.finance.WalletValidateAddressRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    processingId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    address: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.client.finance.WalletValidateAddressRequest}
 */
proto.mlmbox.client.finance.WalletValidateAddressRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.client.finance.WalletValidateAddressRequest;
  return proto.mlmbox.client.finance.WalletValidateAddressRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.client.finance.WalletValidateAddressRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.client.finance.WalletValidateAddressRequest}
 */
proto.mlmbox.client.finance.WalletValidateAddressRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setProcessingId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.client.finance.WalletValidateAddressRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.client.finance.WalletValidateAddressRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.client.finance.WalletValidateAddressRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.client.finance.WalletValidateAddressRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProcessingId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 processing_id = 1;
 * @return {number}
 */
proto.mlmbox.client.finance.WalletValidateAddressRequest.prototype.getProcessingId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.client.finance.WalletValidateAddressRequest} returns this
 */
proto.mlmbox.client.finance.WalletValidateAddressRequest.prototype.setProcessingId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string address = 2;
 * @return {string}
 */
proto.mlmbox.client.finance.WalletValidateAddressRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.client.finance.WalletValidateAddressRequest} returns this
 */
proto.mlmbox.client.finance.WalletValidateAddressRequest.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.client.finance.WalletValidateAddressResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.client.finance.WalletValidateAddressResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.client.finance.WalletValidateAddressResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.client.finance.WalletValidateAddressResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    validated: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.client.finance.WalletValidateAddressResponse}
 */
proto.mlmbox.client.finance.WalletValidateAddressResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.client.finance.WalletValidateAddressResponse;
  return proto.mlmbox.client.finance.WalletValidateAddressResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.client.finance.WalletValidateAddressResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.client.finance.WalletValidateAddressResponse}
 */
proto.mlmbox.client.finance.WalletValidateAddressResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setValidated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.client.finance.WalletValidateAddressResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.client.finance.WalletValidateAddressResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.client.finance.WalletValidateAddressResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.client.finance.WalletValidateAddressResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValidated();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional string address = 1;
 * @return {string}
 */
proto.mlmbox.client.finance.WalletValidateAddressResponse.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.client.finance.WalletValidateAddressResponse} returns this
 */
proto.mlmbox.client.finance.WalletValidateAddressResponse.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional bool validated = 2;
 * @return {boolean}
 */
proto.mlmbox.client.finance.WalletValidateAddressResponse.prototype.getValidated = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mlmbox.client.finance.WalletValidateAddressResponse} returns this
 */
proto.mlmbox.client.finance.WalletValidateAddressResponse.prototype.setValidated = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.client.finance.WalletWithdrawalRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.client.finance.WalletWithdrawalRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.client.finance.WalletWithdrawalRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.client.finance.WalletWithdrawalRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    processingId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    operationAmount: (f = msg.getOperationAmount()) && mlmbox_types_asset_pb.Asset.Amount.toObject(includeInstance, f),
    address: jspb.Message.getFieldWithDefault(msg, 3, ""),
    verifiedCode: jspb.Message.getFieldWithDefault(msg, 4, ""),
    operationFeeFromBody: jspb.Message.getBooleanFieldWithDefault(msg, 5, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.client.finance.WalletWithdrawalRequest}
 */
proto.mlmbox.client.finance.WalletWithdrawalRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.client.finance.WalletWithdrawalRequest;
  return proto.mlmbox.client.finance.WalletWithdrawalRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.client.finance.WalletWithdrawalRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.client.finance.WalletWithdrawalRequest}
 */
proto.mlmbox.client.finance.WalletWithdrawalRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setProcessingId(value);
      break;
    case 2:
      var value = new mlmbox_types_asset_pb.Asset.Amount;
      reader.readMessage(value,mlmbox_types_asset_pb.Asset.Amount.deserializeBinaryFromReader);
      msg.setOperationAmount(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAddress(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setVerifiedCode(value);
      break;
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOperationFeeFromBody(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.client.finance.WalletWithdrawalRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.client.finance.WalletWithdrawalRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.client.finance.WalletWithdrawalRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.client.finance.WalletWithdrawalRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProcessingId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getOperationAmount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      mlmbox_types_asset_pb.Asset.Amount.serializeBinaryToWriter
    );
  }
  f = message.getAddress();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getVerifiedCode();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getOperationFeeFromBody();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
};


/**
 * optional uint32 processing_id = 1;
 * @return {number}
 */
proto.mlmbox.client.finance.WalletWithdrawalRequest.prototype.getProcessingId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.client.finance.WalletWithdrawalRequest} returns this
 */
proto.mlmbox.client.finance.WalletWithdrawalRequest.prototype.setProcessingId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional mlmbox.types.Asset.Amount operation_amount = 2;
 * @return {?proto.mlmbox.types.Asset.Amount}
 */
proto.mlmbox.client.finance.WalletWithdrawalRequest.prototype.getOperationAmount = function() {
  return /** @type{?proto.mlmbox.types.Asset.Amount} */ (
    jspb.Message.getWrapperField(this, mlmbox_types_asset_pb.Asset.Amount, 2));
};


/**
 * @param {?proto.mlmbox.types.Asset.Amount|undefined} value
 * @return {!proto.mlmbox.client.finance.WalletWithdrawalRequest} returns this
*/
proto.mlmbox.client.finance.WalletWithdrawalRequest.prototype.setOperationAmount = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.client.finance.WalletWithdrawalRequest} returns this
 */
proto.mlmbox.client.finance.WalletWithdrawalRequest.prototype.clearOperationAmount = function() {
  return this.setOperationAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.client.finance.WalletWithdrawalRequest.prototype.hasOperationAmount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string address = 3;
 * @return {string}
 */
proto.mlmbox.client.finance.WalletWithdrawalRequest.prototype.getAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.client.finance.WalletWithdrawalRequest} returns this
 */
proto.mlmbox.client.finance.WalletWithdrawalRequest.prototype.setAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string verified_code = 4;
 * @return {string}
 */
proto.mlmbox.client.finance.WalletWithdrawalRequest.prototype.getVerifiedCode = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.client.finance.WalletWithdrawalRequest} returns this
 */
proto.mlmbox.client.finance.WalletWithdrawalRequest.prototype.setVerifiedCode = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional bool operation_fee_from_body = 5;
 * @return {boolean}
 */
proto.mlmbox.client.finance.WalletWithdrawalRequest.prototype.getOperationFeeFromBody = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 5, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mlmbox.client.finance.WalletWithdrawalRequest} returns this
 */
proto.mlmbox.client.finance.WalletWithdrawalRequest.prototype.setOperationFeeFromBody = function(value) {
  return jspb.Message.setProto3BooleanField(this, 5, value);
};


goog.object.extend(exports, proto.mlmbox.client.finance);
