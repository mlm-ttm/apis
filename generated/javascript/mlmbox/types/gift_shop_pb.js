// source: mlmbox/types/gift_shop.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var mlmbox_types_wallet_pb = require('../../mlmbox/types/wallet_pb.js');
goog.object.extend(proto, mlmbox_types_wallet_pb);
goog.exportSymbol('proto.mlmbox.types.GiftShop', null, global);
goog.exportSymbol('proto.mlmbox.types.GiftShop.Card', null, global);
goog.exportSymbol('proto.mlmbox.types.GiftShop.Card.Id', null, global);
goog.exportSymbol('proto.mlmbox.types.GiftShop.Info', null, global);
goog.exportSymbol('proto.mlmbox.types.GiftShop.State', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.GiftShop = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.GiftShop, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.GiftShop.displayName = 'proto.mlmbox.types.GiftShop';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.GiftShop.Card = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.GiftShop.Card, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.GiftShop.Card.displayName = 'proto.mlmbox.types.GiftShop.Card';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.GiftShop.Card.Id = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.GiftShop.Card.Id, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.GiftShop.Card.Id.displayName = 'proto.mlmbox.types.GiftShop.Card.Id';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.GiftShop.Info = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mlmbox.types.GiftShop.Info.repeatedFields_, null);
};
goog.inherits(proto.mlmbox.types.GiftShop.Info, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.GiftShop.Info.displayName = 'proto.mlmbox.types.GiftShop.Info';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.GiftShop.State = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mlmbox.types.GiftShop.State.repeatedFields_, null);
};
goog.inherits(proto.mlmbox.types.GiftShop.State, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.GiftShop.State.displayName = 'proto.mlmbox.types.GiftShop.State';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.GiftShop.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.GiftShop.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.GiftShop} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.GiftShop.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.GiftShop}
 */
proto.mlmbox.types.GiftShop.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.GiftShop;
  return proto.mlmbox.types.GiftShop.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.GiftShop} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.GiftShop}
 */
proto.mlmbox.types.GiftShop.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.GiftShop.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.GiftShop.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.GiftShop} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.GiftShop.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.GiftShop.Card.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.GiftShop.Card.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.GiftShop.Card} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.GiftShop.Card.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    description: jspb.Message.getFieldWithDefault(msg, 3, ""),
    imageSrc: jspb.Message.getFieldWithDefault(msg, 4, ""),
    usdtPrice: jspb.Message.getFieldWithDefault(msg, 5, ""),
    usdtFee: jspb.Message.getFieldWithDefault(msg, 6, ""),
    pointsNeeded: jspb.Message.getFieldWithDefault(msg, 7, ""),
    released: jspb.Message.getBooleanFieldWithDefault(msg, 8, false),
    createdAt: jspb.Message.getFieldWithDefault(msg, 9, 0),
    releasedAt: jspb.Message.getFieldWithDefault(msg, 10, 0),
    transaction: (f = msg.getTransaction()) && mlmbox_types_wallet_pb.Wallet.Asset.Transaction.toObject(includeInstance, f),
    reviewVideoUrl: jspb.Message.getFieldWithDefault(msg, 12, ""),
    reviewCreatedAt: jspb.Message.getFieldWithDefault(msg, 13, 0),
    reviewApproved: jspb.Message.getBooleanFieldWithDefault(msg, 14, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.GiftShop.Card}
 */
proto.mlmbox.types.GiftShop.Card.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.GiftShop.Card;
  return proto.mlmbox.types.GiftShop.Card.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.GiftShop.Card} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.GiftShop.Card}
 */
proto.mlmbox.types.GiftShop.Card.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageSrc(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsdtPrice(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsdtFee(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPointsNeeded(value);
      break;
    case 8:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReleased(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCreatedAt(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReleasedAt(value);
      break;
    case 11:
      var value = new mlmbox_types_wallet_pb.Wallet.Asset.Transaction;
      reader.readMessage(value,mlmbox_types_wallet_pb.Wallet.Asset.Transaction.deserializeBinaryFromReader);
      msg.setTransaction(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setReviewVideoUrl(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReviewCreatedAt(value);
      break;
    case 14:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReviewApproved(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.GiftShop.Card.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.GiftShop.Card.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.GiftShop.Card} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.GiftShop.Card.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getImageSrc();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getUsdtPrice();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getUsdtFee();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPointsNeeded();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getReleased();
  if (f) {
    writer.writeBool(
      8,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = message.getReleasedAt();
  if (f !== 0) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = message.getTransaction();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      mlmbox_types_wallet_pb.Wallet.Asset.Transaction.serializeBinaryToWriter
    );
  }
  f = message.getReviewVideoUrl();
  if (f.length > 0) {
    writer.writeString(
      12,
      f
    );
  }
  f = message.getReviewCreatedAt();
  if (f !== 0) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = message.getReviewApproved();
  if (f) {
    writer.writeBool(
      14,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.GiftShop.Card.Id.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.GiftShop.Card.Id.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.GiftShop.Card.Id} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.GiftShop.Card.Id.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.GiftShop.Card.Id}
 */
proto.mlmbox.types.GiftShop.Card.Id.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.GiftShop.Card.Id;
  return proto.mlmbox.types.GiftShop.Card.Id.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.GiftShop.Card.Id} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.GiftShop.Card.Id}
 */
proto.mlmbox.types.GiftShop.Card.Id.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.GiftShop.Card.Id.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.GiftShop.Card.Id.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.GiftShop.Card.Id} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.GiftShop.Card.Id.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.mlmbox.types.GiftShop.Card.Id.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.GiftShop.Card.Id} returns this
 */
proto.mlmbox.types.GiftShop.Card.Id.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.mlmbox.types.GiftShop.Card.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.GiftShop.Card} returns this
 */
proto.mlmbox.types.GiftShop.Card.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.mlmbox.types.GiftShop.Card.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.GiftShop.Card} returns this
 */
proto.mlmbox.types.GiftShop.Card.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string description = 3;
 * @return {string}
 */
proto.mlmbox.types.GiftShop.Card.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.GiftShop.Card} returns this
 */
proto.mlmbox.types.GiftShop.Card.prototype.setDescription = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string image_src = 4;
 * @return {string}
 */
proto.mlmbox.types.GiftShop.Card.prototype.getImageSrc = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.GiftShop.Card} returns this
 */
proto.mlmbox.types.GiftShop.Card.prototype.setImageSrc = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string usdt_price = 5;
 * @return {string}
 */
proto.mlmbox.types.GiftShop.Card.prototype.getUsdtPrice = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.GiftShop.Card} returns this
 */
proto.mlmbox.types.GiftShop.Card.prototype.setUsdtPrice = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string usdt_fee = 6;
 * @return {string}
 */
proto.mlmbox.types.GiftShop.Card.prototype.getUsdtFee = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.GiftShop.Card} returns this
 */
proto.mlmbox.types.GiftShop.Card.prototype.setUsdtFee = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string points_needed = 7;
 * @return {string}
 */
proto.mlmbox.types.GiftShop.Card.prototype.getPointsNeeded = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.GiftShop.Card} returns this
 */
proto.mlmbox.types.GiftShop.Card.prototype.setPointsNeeded = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional bool released = 8;
 * @return {boolean}
 */
proto.mlmbox.types.GiftShop.Card.prototype.getReleased = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 8, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mlmbox.types.GiftShop.Card} returns this
 */
proto.mlmbox.types.GiftShop.Card.prototype.setReleased = function(value) {
  return jspb.Message.setProto3BooleanField(this, 8, value);
};


/**
 * optional uint32 created_at = 9;
 * @return {number}
 */
proto.mlmbox.types.GiftShop.Card.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.GiftShop.Card} returns this
 */
proto.mlmbox.types.GiftShop.Card.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 9, value);
};


/**
 * optional uint32 released_at = 10;
 * @return {number}
 */
proto.mlmbox.types.GiftShop.Card.prototype.getReleasedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.GiftShop.Card} returns this
 */
proto.mlmbox.types.GiftShop.Card.prototype.setReleasedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional Wallet.Asset.Transaction transaction = 11;
 * @return {?proto.mlmbox.types.Wallet.Asset.Transaction}
 */
proto.mlmbox.types.GiftShop.Card.prototype.getTransaction = function() {
  return /** @type{?proto.mlmbox.types.Wallet.Asset.Transaction} */ (
    jspb.Message.getWrapperField(this, mlmbox_types_wallet_pb.Wallet.Asset.Transaction, 11));
};


/**
 * @param {?proto.mlmbox.types.Wallet.Asset.Transaction|undefined} value
 * @return {!proto.mlmbox.types.GiftShop.Card} returns this
*/
proto.mlmbox.types.GiftShop.Card.prototype.setTransaction = function(value) {
  return jspb.Message.setWrapperField(this, 11, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.GiftShop.Card} returns this
 */
proto.mlmbox.types.GiftShop.Card.prototype.clearTransaction = function() {
  return this.setTransaction(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.GiftShop.Card.prototype.hasTransaction = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string review_video_url = 12;
 * @return {string}
 */
proto.mlmbox.types.GiftShop.Card.prototype.getReviewVideoUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.GiftShop.Card} returns this
 */
proto.mlmbox.types.GiftShop.Card.prototype.setReviewVideoUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 12, value);
};


/**
 * optional uint32 review_created_at = 13;
 * @return {number}
 */
proto.mlmbox.types.GiftShop.Card.prototype.getReviewCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.GiftShop.Card} returns this
 */
proto.mlmbox.types.GiftShop.Card.prototype.setReviewCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional bool review_approved = 14;
 * @return {boolean}
 */
proto.mlmbox.types.GiftShop.Card.prototype.getReviewApproved = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 14, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mlmbox.types.GiftShop.Card} returns this
 */
proto.mlmbox.types.GiftShop.Card.prototype.setReviewApproved = function(value) {
  return jspb.Message.setProto3BooleanField(this, 14, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mlmbox.types.GiftShop.Info.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.GiftShop.Info.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.GiftShop.Info.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.GiftShop.Info} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.GiftShop.Info.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointsBalanceFrozen: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pointsBalanceAvailable: jspb.Message.getFieldWithDefault(msg, 2, ""),
    needReviewCardIdsList: (f = jspb.Message.getRepeatedField(msg, 3)) == null ? undefined : f,
    card: (f = msg.getCard()) && proto.mlmbox.types.GiftShop.Card.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.GiftShop.Info}
 */
proto.mlmbox.types.GiftShop.Info.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.GiftShop.Info;
  return proto.mlmbox.types.GiftShop.Info.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.GiftShop.Info} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.GiftShop.Info}
 */
proto.mlmbox.types.GiftShop.Info.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPointsBalanceFrozen(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPointsBalanceAvailable(value);
      break;
    case 3:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addNeedReviewCardIds(values[i]);
      }
      break;
    case 4:
      var value = new proto.mlmbox.types.GiftShop.Card;
      reader.readMessage(value,proto.mlmbox.types.GiftShop.Card.deserializeBinaryFromReader);
      msg.setCard(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.GiftShop.Info.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.GiftShop.Info.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.GiftShop.Info} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.GiftShop.Info.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointsBalanceFrozen();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPointsBalanceAvailable();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getNeedReviewCardIdsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      3,
      f
    );
  }
  f = message.getCard();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.mlmbox.types.GiftShop.Card.serializeBinaryToWriter
    );
  }
};


/**
 * optional string points_balance_frozen = 1;
 * @return {string}
 */
proto.mlmbox.types.GiftShop.Info.prototype.getPointsBalanceFrozen = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.GiftShop.Info} returns this
 */
proto.mlmbox.types.GiftShop.Info.prototype.setPointsBalanceFrozen = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string points_balance_available = 2;
 * @return {string}
 */
proto.mlmbox.types.GiftShop.Info.prototype.getPointsBalanceAvailable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.GiftShop.Info} returns this
 */
proto.mlmbox.types.GiftShop.Info.prototype.setPointsBalanceAvailable = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated uint32 need_review_card_ids = 3;
 * @return {!Array<number>}
 */
proto.mlmbox.types.GiftShop.Info.prototype.getNeedReviewCardIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 3));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.mlmbox.types.GiftShop.Info} returns this
 */
proto.mlmbox.types.GiftShop.Info.prototype.setNeedReviewCardIdsList = function(value) {
  return jspb.Message.setField(this, 3, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.mlmbox.types.GiftShop.Info} returns this
 */
proto.mlmbox.types.GiftShop.Info.prototype.addNeedReviewCardIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 3, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mlmbox.types.GiftShop.Info} returns this
 */
proto.mlmbox.types.GiftShop.Info.prototype.clearNeedReviewCardIdsList = function() {
  return this.setNeedReviewCardIdsList([]);
};


/**
 * optional Card card = 4;
 * @return {?proto.mlmbox.types.GiftShop.Card}
 */
proto.mlmbox.types.GiftShop.Info.prototype.getCard = function() {
  return /** @type{?proto.mlmbox.types.GiftShop.Card} */ (
    jspb.Message.getWrapperField(this, proto.mlmbox.types.GiftShop.Card, 4));
};


/**
 * @param {?proto.mlmbox.types.GiftShop.Card|undefined} value
 * @return {!proto.mlmbox.types.GiftShop.Info} returns this
*/
proto.mlmbox.types.GiftShop.Info.prototype.setCard = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.GiftShop.Info} returns this
 */
proto.mlmbox.types.GiftShop.Info.prototype.clearCard = function() {
  return this.setCard(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.GiftShop.Info.prototype.hasCard = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mlmbox.types.GiftShop.State.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.GiftShop.State.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.GiftShop.State.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.GiftShop.State} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.GiftShop.State.toObject = function(includeInstance, msg) {
  var f, obj = {
    pointsBalanceFrozen: jspb.Message.getFieldWithDefault(msg, 1, ""),
    pointsBalanceAvailable: jspb.Message.getFieldWithDefault(msg, 2, ""),
    settingsCardUsdtPriceMin: jspb.Message.getFieldWithDefault(msg, 3, ""),
    needReviewCardIdsList: (f = jspb.Message.getRepeatedField(msg, 4)) == null ? undefined : f,
    cardsList: jspb.Message.toObjectList(msg.getCardsList(),
    proto.mlmbox.types.GiftShop.Card.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.GiftShop.State}
 */
proto.mlmbox.types.GiftShop.State.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.GiftShop.State;
  return proto.mlmbox.types.GiftShop.State.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.GiftShop.State} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.GiftShop.State}
 */
proto.mlmbox.types.GiftShop.State.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPointsBalanceFrozen(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPointsBalanceAvailable(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSettingsCardUsdtPriceMin(value);
      break;
    case 4:
      var values = /** @type {!Array<number>} */ (reader.isDelimited() ? reader.readPackedUint32() : [reader.readUint32()]);
      for (var i = 0; i < values.length; i++) {
        msg.addNeedReviewCardIds(values[i]);
      }
      break;
    case 5:
      var value = new proto.mlmbox.types.GiftShop.Card;
      reader.readMessage(value,proto.mlmbox.types.GiftShop.Card.deserializeBinaryFromReader);
      msg.addCards(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.GiftShop.State.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.GiftShop.State.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.GiftShop.State} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.GiftShop.State.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPointsBalanceFrozen();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPointsBalanceAvailable();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSettingsCardUsdtPriceMin();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNeedReviewCardIdsList();
  if (f.length > 0) {
    writer.writePackedUint32(
      4,
      f
    );
  }
  f = message.getCardsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.mlmbox.types.GiftShop.Card.serializeBinaryToWriter
    );
  }
};


/**
 * optional string points_balance_frozen = 1;
 * @return {string}
 */
proto.mlmbox.types.GiftShop.State.prototype.getPointsBalanceFrozen = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.GiftShop.State} returns this
 */
proto.mlmbox.types.GiftShop.State.prototype.setPointsBalanceFrozen = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string points_balance_available = 2;
 * @return {string}
 */
proto.mlmbox.types.GiftShop.State.prototype.getPointsBalanceAvailable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.GiftShop.State} returns this
 */
proto.mlmbox.types.GiftShop.State.prototype.setPointsBalanceAvailable = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string settings_card_usdt_price_min = 3;
 * @return {string}
 */
proto.mlmbox.types.GiftShop.State.prototype.getSettingsCardUsdtPriceMin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.GiftShop.State} returns this
 */
proto.mlmbox.types.GiftShop.State.prototype.setSettingsCardUsdtPriceMin = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated uint32 need_review_card_ids = 4;
 * @return {!Array<number>}
 */
proto.mlmbox.types.GiftShop.State.prototype.getNeedReviewCardIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.mlmbox.types.GiftShop.State} returns this
 */
proto.mlmbox.types.GiftShop.State.prototype.setNeedReviewCardIdsList = function(value) {
  return jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.mlmbox.types.GiftShop.State} returns this
 */
proto.mlmbox.types.GiftShop.State.prototype.addNeedReviewCardIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mlmbox.types.GiftShop.State} returns this
 */
proto.mlmbox.types.GiftShop.State.prototype.clearNeedReviewCardIdsList = function() {
  return this.setNeedReviewCardIdsList([]);
};


/**
 * repeated Card cards = 5;
 * @return {!Array<!proto.mlmbox.types.GiftShop.Card>}
 */
proto.mlmbox.types.GiftShop.State.prototype.getCardsList = function() {
  return /** @type{!Array<!proto.mlmbox.types.GiftShop.Card>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mlmbox.types.GiftShop.Card, 5));
};


/**
 * @param {!Array<!proto.mlmbox.types.GiftShop.Card>} value
 * @return {!proto.mlmbox.types.GiftShop.State} returns this
*/
proto.mlmbox.types.GiftShop.State.prototype.setCardsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.mlmbox.types.GiftShop.Card=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mlmbox.types.GiftShop.Card}
 */
proto.mlmbox.types.GiftShop.State.prototype.addCards = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.mlmbox.types.GiftShop.Card, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mlmbox.types.GiftShop.State} returns this
 */
proto.mlmbox.types.GiftShop.State.prototype.clearCardsList = function() {
  return this.setCardsList([]);
};


goog.object.extend(exports, proto.mlmbox.types);
