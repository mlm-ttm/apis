/**
 * @fileoverview gRPC-Web generated client stub for mlmbox.client.finance
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.28.2
// source: mlmbox/client/finance/pool_hunter.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb'; // proto import: "google/protobuf/empty.proto"
import * as mlmbox_types_pool_pb from '../../../mlmbox/types/pool_pb'; // proto import: "mlmbox/types/pool.proto"


export class PoolHunterClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorInfo = new grpcWeb.MethodDescriptor(
    '/mlmbox.client.finance.PoolHunter/Info',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    mlmbox_types_pool_pb.Pool.Hunter,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    mlmbox_types_pool_pb.Pool.Hunter.deserializeBinary
  );

  info(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null): Promise<mlmbox_types_pool_pb.Pool.Hunter>;

  info(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: mlmbox_types_pool_pb.Pool.Hunter) => void): grpcWeb.ClientReadableStream<mlmbox_types_pool_pb.Pool.Hunter>;

  info(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: mlmbox_types_pool_pb.Pool.Hunter) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mlmbox.client.finance.PoolHunter/Info',
        request,
        metadata || {},
        this.methodDescriptorInfo,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mlmbox.client.finance.PoolHunter/Info',
    request,
    metadata || {},
    this.methodDescriptorInfo);
  }

  methodDescriptorHistory = new grpcWeb.MethodDescriptor(
    '/mlmbox.client.finance.PoolHunter/History',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    mlmbox_types_pool_pb.Pool.Hunter.History.List,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    mlmbox_types_pool_pb.Pool.Hunter.History.List.deserializeBinary
  );

  history(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null): Promise<mlmbox_types_pool_pb.Pool.Hunter.History.List>;

  history(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: mlmbox_types_pool_pb.Pool.Hunter.History.List) => void): grpcWeb.ClientReadableStream<mlmbox_types_pool_pb.Pool.Hunter.History.List>;

  history(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: mlmbox_types_pool_pb.Pool.Hunter.History.List) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mlmbox.client.finance.PoolHunter/History',
        request,
        metadata || {},
        this.methodDescriptorHistory,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mlmbox.client.finance.PoolHunter/History',
    request,
    metadata || {},
    this.methodDescriptorHistory);
  }

  methodDescriptorCardGet = new grpcWeb.MethodDescriptor(
    '/mlmbox.client.finance.PoolHunter/CardGet',
    grpcWeb.MethodType.UNARY,
    mlmbox_types_pool_pb.Pool.Hunter.Card.Id,
    mlmbox_types_pool_pb.Pool.Hunter.Card,
    (request: mlmbox_types_pool_pb.Pool.Hunter.Card.Id) => {
      return request.serializeBinary();
    },
    mlmbox_types_pool_pb.Pool.Hunter.Card.deserializeBinary
  );

  cardGet(
    request: mlmbox_types_pool_pb.Pool.Hunter.Card.Id,
    metadata?: grpcWeb.Metadata | null): Promise<mlmbox_types_pool_pb.Pool.Hunter.Card>;

  cardGet(
    request: mlmbox_types_pool_pb.Pool.Hunter.Card.Id,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: mlmbox_types_pool_pb.Pool.Hunter.Card) => void): grpcWeb.ClientReadableStream<mlmbox_types_pool_pb.Pool.Hunter.Card>;

  cardGet(
    request: mlmbox_types_pool_pb.Pool.Hunter.Card.Id,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: mlmbox_types_pool_pb.Pool.Hunter.Card) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mlmbox.client.finance.PoolHunter/CardGet',
        request,
        metadata || {},
        this.methodDescriptorCardGet,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mlmbox.client.finance.PoolHunter/CardGet',
    request,
    metadata || {},
    this.methodDescriptorCardGet);
  }

  methodDescriptorCardsAll = new grpcWeb.MethodDescriptor(
    '/mlmbox.client.finance.PoolHunter/CardsAll',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    mlmbox_types_pool_pb.Pool.Hunter.Card.Info.List,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    mlmbox_types_pool_pb.Pool.Hunter.Card.Info.List.deserializeBinary
  );

  cardsAll(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null): Promise<mlmbox_types_pool_pb.Pool.Hunter.Card.Info.List>;

  cardsAll(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: mlmbox_types_pool_pb.Pool.Hunter.Card.Info.List) => void): grpcWeb.ClientReadableStream<mlmbox_types_pool_pb.Pool.Hunter.Card.Info.List>;

  cardsAll(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: mlmbox_types_pool_pb.Pool.Hunter.Card.Info.List) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mlmbox.client.finance.PoolHunter/CardsAll',
        request,
        metadata || {},
        this.methodDescriptorCardsAll,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mlmbox.client.finance.PoolHunter/CardsAll',
    request,
    metadata || {},
    this.methodDescriptorCardsAll);
  }

  methodDescriptorCardTransactionsAll = new grpcWeb.MethodDescriptor(
    '/mlmbox.client.finance.PoolHunter/CardTransactionsAll',
    grpcWeb.MethodType.UNARY,
    mlmbox_types_pool_pb.Pool.Hunter.Card.Id,
    mlmbox_types_pool_pb.Pool.Hunter.Card.Transaction.List,
    (request: mlmbox_types_pool_pb.Pool.Hunter.Card.Id) => {
      return request.serializeBinary();
    },
    mlmbox_types_pool_pb.Pool.Hunter.Card.Transaction.List.deserializeBinary
  );

  cardTransactionsAll(
    request: mlmbox_types_pool_pb.Pool.Hunter.Card.Id,
    metadata?: grpcWeb.Metadata | null): Promise<mlmbox_types_pool_pb.Pool.Hunter.Card.Transaction.List>;

  cardTransactionsAll(
    request: mlmbox_types_pool_pb.Pool.Hunter.Card.Id,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: mlmbox_types_pool_pb.Pool.Hunter.Card.Transaction.List) => void): grpcWeb.ClientReadableStream<mlmbox_types_pool_pb.Pool.Hunter.Card.Transaction.List>;

  cardTransactionsAll(
    request: mlmbox_types_pool_pb.Pool.Hunter.Card.Id,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: mlmbox_types_pool_pb.Pool.Hunter.Card.Transaction.List) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mlmbox.client.finance.PoolHunter/CardTransactionsAll',
        request,
        metadata || {},
        this.methodDescriptorCardTransactionsAll,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mlmbox.client.finance.PoolHunter/CardTransactionsAll',
    request,
    metadata || {},
    this.methodDescriptorCardTransactionsAll);
  }

}

