/**
 * @fileoverview gRPC-Web generated client stub for mlmbox.client.distribution
 * @enhanceable
 * @public
 */

// Code generated by protoc-gen-grpc-web. DO NOT EDIT.
// versions:
// 	protoc-gen-grpc-web v1.5.0
// 	protoc              v5.28.2
// source: mlmbox/client/distribution/distribution.proto


/* eslint-disable */
// @ts-nocheck


import * as grpcWeb from 'grpc-web';

import * as google_protobuf_empty_pb from 'google-protobuf/google/protobuf/empty_pb'; // proto import: "google/protobuf/empty.proto"
import * as mlmbox_client_distribution_distribution_pb from '../../../mlmbox/client/distribution/distribution_pb'; // proto import: "mlmbox/client/distribution/distribution.proto"
import * as mlmbox_types_distribution_pb from '../../../mlmbox/types/distribution_pb'; // proto import: "mlmbox/types/distribution.proto"


export class DistributionClient {
  client_: grpcWeb.AbstractClientBase;
  hostname_: string;
  credentials_: null | { [index: string]: string; };
  options_: null | { [index: string]: any; };

  constructor (hostname: string,
               credentials?: null | { [index: string]: string; },
               options?: null | { [index: string]: any; }) {
    if (!options) options = {};
    if (!credentials) credentials = {};
    options['format'] = 'text';

    this.client_ = new grpcWeb.GrpcWebClientBase(options);
    this.hostname_ = hostname.replace(/\/+$/, '');
    this.credentials_ = credentials;
    this.options_ = options;
  }

  methodDescriptorInfo = new grpcWeb.MethodDescriptor(
    '/mlmbox.client.distribution.Distribution/Info',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    mlmbox_types_distribution_pb.Distribution.State,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    mlmbox_types_distribution_pb.Distribution.State.deserializeBinary
  );

  info(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null): Promise<mlmbox_types_distribution_pb.Distribution.State>;

  info(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: mlmbox_types_distribution_pb.Distribution.State) => void): grpcWeb.ClientReadableStream<mlmbox_types_distribution_pb.Distribution.State>;

  info(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: mlmbox_types_distribution_pb.Distribution.State) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mlmbox.client.distribution.Distribution/Info',
        request,
        metadata || {},
        this.methodDescriptorInfo,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mlmbox.client.distribution.Distribution/Info',
    request,
    metadata || {},
    this.methodDescriptorInfo);
  }

  methodDescriptorGetSignatureMessage = new grpcWeb.MethodDescriptor(
    '/mlmbox.client.distribution.Distribution/GetSignatureMessage',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    mlmbox_client_distribution_distribution_pb.SignatureMessageResponse,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    mlmbox_client_distribution_distribution_pb.SignatureMessageResponse.deserializeBinary
  );

  getSignatureMessage(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null): Promise<mlmbox_client_distribution_distribution_pb.SignatureMessageResponse>;

  getSignatureMessage(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: mlmbox_client_distribution_distribution_pb.SignatureMessageResponse) => void): grpcWeb.ClientReadableStream<mlmbox_client_distribution_distribution_pb.SignatureMessageResponse>;

  getSignatureMessage(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: mlmbox_client_distribution_distribution_pb.SignatureMessageResponse) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mlmbox.client.distribution.Distribution/GetSignatureMessage',
        request,
        metadata || {},
        this.methodDescriptorGetSignatureMessage,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mlmbox.client.distribution.Distribution/GetSignatureMessage',
    request,
    metadata || {},
    this.methodDescriptorGetSignatureMessage);
  }

  methodDescriptorWeb3AddressAttachSigned = new grpcWeb.MethodDescriptor(
    '/mlmbox.client.distribution.Distribution/Web3AddressAttachSigned',
    grpcWeb.MethodType.UNARY,
    mlmbox_client_distribution_distribution_pb.AttachSignedMessageRequest,
    mlmbox_types_distribution_pb.Distribution.State,
    (request: mlmbox_client_distribution_distribution_pb.AttachSignedMessageRequest) => {
      return request.serializeBinary();
    },
    mlmbox_types_distribution_pb.Distribution.State.deserializeBinary
  );

  web3AddressAttachSigned(
    request: mlmbox_client_distribution_distribution_pb.AttachSignedMessageRequest,
    metadata?: grpcWeb.Metadata | null): Promise<mlmbox_types_distribution_pb.Distribution.State>;

  web3AddressAttachSigned(
    request: mlmbox_client_distribution_distribution_pb.AttachSignedMessageRequest,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: mlmbox_types_distribution_pb.Distribution.State) => void): grpcWeb.ClientReadableStream<mlmbox_types_distribution_pb.Distribution.State>;

  web3AddressAttachSigned(
    request: mlmbox_client_distribution_distribution_pb.AttachSignedMessageRequest,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: mlmbox_types_distribution_pb.Distribution.State) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mlmbox.client.distribution.Distribution/Web3AddressAttachSigned',
        request,
        metadata || {},
        this.methodDescriptorWeb3AddressAttachSigned,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mlmbox.client.distribution.Distribution/Web3AddressAttachSigned',
    request,
    metadata || {},
    this.methodDescriptorWeb3AddressAttachSigned);
  }

  methodDescriptorWeb3AddressDetach = new grpcWeb.MethodDescriptor(
    '/mlmbox.client.distribution.Distribution/Web3AddressDetach',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    mlmbox_types_distribution_pb.Distribution.State,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    mlmbox_types_distribution_pb.Distribution.State.deserializeBinary
  );

  web3AddressDetach(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null): Promise<mlmbox_types_distribution_pb.Distribution.State>;

  web3AddressDetach(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: mlmbox_types_distribution_pb.Distribution.State) => void): grpcWeb.ClientReadableStream<mlmbox_types_distribution_pb.Distribution.State>;

  web3AddressDetach(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: mlmbox_types_distribution_pb.Distribution.State) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mlmbox.client.distribution.Distribution/Web3AddressDetach',
        request,
        metadata || {},
        this.methodDescriptorWeb3AddressDetach,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mlmbox.client.distribution.Distribution/Web3AddressDetach',
    request,
    metadata || {},
    this.methodDescriptorWeb3AddressDetach);
  }

  methodDescriptorHolderInfo = new grpcWeb.MethodDescriptor(
    '/mlmbox.client.distribution.Distribution/HolderInfo',
    grpcWeb.MethodType.UNARY,
    google_protobuf_empty_pb.Empty,
    mlmbox_types_distribution_pb.Distribution.Holder,
    (request: google_protobuf_empty_pb.Empty) => {
      return request.serializeBinary();
    },
    mlmbox_types_distribution_pb.Distribution.Holder.deserializeBinary
  );

  holderInfo(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null): Promise<mlmbox_types_distribution_pb.Distribution.Holder>;

  holderInfo(
    request: google_protobuf_empty_pb.Empty,
    metadata: grpcWeb.Metadata | null,
    callback: (err: grpcWeb.RpcError,
               response: mlmbox_types_distribution_pb.Distribution.Holder) => void): grpcWeb.ClientReadableStream<mlmbox_types_distribution_pb.Distribution.Holder>;

  holderInfo(
    request: google_protobuf_empty_pb.Empty,
    metadata?: grpcWeb.Metadata | null,
    callback?: (err: grpcWeb.RpcError,
               response: mlmbox_types_distribution_pb.Distribution.Holder) => void) {
    if (callback !== undefined) {
      return this.client_.rpcCall(
        this.hostname_ +
          '/mlmbox.client.distribution.Distribution/HolderInfo',
        request,
        metadata || {},
        this.methodDescriptorHolderInfo,
        callback);
    }
    return this.client_.unaryCall(
    this.hostname_ +
      '/mlmbox.client.distribution.Distribution/HolderInfo',
    request,
    metadata || {},
    this.methodDescriptorHolderInfo);
  }

}

