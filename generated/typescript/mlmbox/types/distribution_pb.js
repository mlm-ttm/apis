// source: mlmbox/types/distribution.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global =
    (typeof globalThis !== 'undefined' && globalThis) ||
    (typeof window !== 'undefined' && window) ||
    (typeof global !== 'undefined' && global) ||
    (typeof self !== 'undefined' && self) ||
    (function () { return this; }).call(null) ||
    Function('return this')();

var mlmbox_types_account_pb = require('../../mlmbox/types/account_pb.js');
goog.object.extend(proto, mlmbox_types_account_pb);
var mlmbox_types_bonus_pb = require('../../mlmbox/types/bonus_pb.js');
goog.object.extend(proto, mlmbox_types_bonus_pb);
goog.exportSymbol('proto.mlmbox.types.Distribution', null, global);
goog.exportSymbol('proto.mlmbox.types.Distribution.Holder', null, global);
goog.exportSymbol('proto.mlmbox.types.Distribution.Holder.Balance', null, global);
goog.exportSymbol('proto.mlmbox.types.Distribution.Holder.Partner', null, global);
goog.exportSymbol('proto.mlmbox.types.Distribution.Holder.State', null, global);
goog.exportSymbol('proto.mlmbox.types.Distribution.State', null, global);
goog.exportSymbol('proto.mlmbox.types.Distribution.State.Config', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Distribution = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Distribution, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Distribution.displayName = 'proto.mlmbox.types.Distribution';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Distribution.State = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Distribution.State, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Distribution.State.displayName = 'proto.mlmbox.types.Distribution.State';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Distribution.State.Config = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Distribution.State.Config, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Distribution.State.Config.displayName = 'proto.mlmbox.types.Distribution.State.Config';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Distribution.Holder = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mlmbox.types.Distribution.Holder.repeatedFields_, null);
};
goog.inherits(proto.mlmbox.types.Distribution.Holder, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Distribution.Holder.displayName = 'proto.mlmbox.types.Distribution.Holder';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Distribution.Holder.Balance = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Distribution.Holder.Balance, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Distribution.Holder.Balance.displayName = 'proto.mlmbox.types.Distribution.Holder.Balance';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Distribution.Holder.State = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Distribution.Holder.State, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Distribution.Holder.State.displayName = 'proto.mlmbox.types.Distribution.Holder.State';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Distribution.Holder.Partner = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Distribution.Holder.Partner, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Distribution.Holder.Partner.displayName = 'proto.mlmbox.types.Distribution.Holder.Partner';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Distribution.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Distribution.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Distribution} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Distribution.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Distribution}
 */
proto.mlmbox.types.Distribution.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Distribution;
  return proto.mlmbox.types.Distribution.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Distribution} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Distribution}
 */
proto.mlmbox.types.Distribution.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Distribution.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Distribution.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Distribution} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Distribution.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Distribution.State.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Distribution.State.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Distribution.State} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Distribution.State.toObject = function(includeInstance, msg) {
  var f, obj = {
    web3Address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    web3AddressAttachedAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    holderBalance: (f = msg.getHolderBalance()) && proto.mlmbox.types.Distribution.Holder.Balance.toObject(includeInstance, f),
    incomeBalanceFrozen: jspb.Message.getFieldWithDefault(msg, 4, ""),
    incomeBonusesStatistics: (f = msg.getIncomeBonusesStatistics()) && mlmbox_types_bonus_pb.Bonus.Summary.toObject(includeInstance, f),
    pointsBalanceFrozen: jspb.Message.getFieldWithDefault(msg, 6, ""),
    pointsBalanceAvailable: jspb.Message.getFieldWithDefault(msg, 7, ""),
    cashbackBalanceFrozen: jspb.Message.getFieldWithDefault(msg, 8, ""),
    cashbackBonusesStatistics: (f = msg.getCashbackBonusesStatistics()) && mlmbox_types_bonus_pb.Bonus.Summary.toObject(includeInstance, f),
    config: (f = msg.getConfig()) && proto.mlmbox.types.Distribution.State.Config.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Distribution.State}
 */
proto.mlmbox.types.Distribution.State.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Distribution.State;
  return proto.mlmbox.types.Distribution.State.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Distribution.State} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Distribution.State}
 */
proto.mlmbox.types.Distribution.State.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWeb3Address(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWeb3AddressAttachedAt(value);
      break;
    case 3:
      var value = new proto.mlmbox.types.Distribution.Holder.Balance;
      reader.readMessage(value,proto.mlmbox.types.Distribution.Holder.Balance.deserializeBinaryFromReader);
      msg.setHolderBalance(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIncomeBalanceFrozen(value);
      break;
    case 5:
      var value = new mlmbox_types_bonus_pb.Bonus.Summary;
      reader.readMessage(value,mlmbox_types_bonus_pb.Bonus.Summary.deserializeBinaryFromReader);
      msg.setIncomeBonusesStatistics(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setPointsBalanceFrozen(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPointsBalanceAvailable(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setCashbackBalanceFrozen(value);
      break;
    case 9:
      var value = new mlmbox_types_bonus_pb.Bonus.Summary;
      reader.readMessage(value,mlmbox_types_bonus_pb.Bonus.Summary.deserializeBinaryFromReader);
      msg.setCashbackBonusesStatistics(value);
      break;
    case 10:
      var value = new proto.mlmbox.types.Distribution.State.Config;
      reader.readMessage(value,proto.mlmbox.types.Distribution.State.Config.deserializeBinaryFromReader);
      msg.setConfig(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Distribution.State.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Distribution.State.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Distribution.State} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Distribution.State.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWeb3Address();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWeb3AddressAttachedAt();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getHolderBalance();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.mlmbox.types.Distribution.Holder.Balance.serializeBinaryToWriter
    );
  }
  f = message.getIncomeBalanceFrozen();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getIncomeBonusesStatistics();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      mlmbox_types_bonus_pb.Bonus.Summary.serializeBinaryToWriter
    );
  }
  f = message.getPointsBalanceFrozen();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPointsBalanceAvailable();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getCashbackBalanceFrozen();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getCashbackBonusesStatistics();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      mlmbox_types_bonus_pb.Bonus.Summary.serializeBinaryToWriter
    );
  }
  f = message.getConfig();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.mlmbox.types.Distribution.State.Config.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Distribution.State.Config.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Distribution.State.Config.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Distribution.State.Config} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Distribution.State.Config.toObject = function(includeInstance, msg) {
  var f, obj = {
    personalPurchaseGameTokenBonusPercent: jspb.Message.getFieldWithDefault(msg, 1, ""),
    partnersPurchaseGameTokenBonusPercent: jspb.Message.getFieldWithDefault(msg, 2, ""),
    partnersPurchasePointsBonusPercent: jspb.Message.getFieldWithDefault(msg, 3, ""),
    partnersPurchasePointsBonusUsdtRate: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Distribution.State.Config}
 */
proto.mlmbox.types.Distribution.State.Config.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Distribution.State.Config;
  return proto.mlmbox.types.Distribution.State.Config.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Distribution.State.Config} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Distribution.State.Config}
 */
proto.mlmbox.types.Distribution.State.Config.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setPersonalPurchaseGameTokenBonusPercent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnersPurchaseGameTokenBonusPercent(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnersPurchasePointsBonusPercent(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setPartnersPurchasePointsBonusUsdtRate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Distribution.State.Config.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Distribution.State.Config.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Distribution.State.Config} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Distribution.State.Config.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPersonalPurchaseGameTokenBonusPercent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPartnersPurchaseGameTokenBonusPercent();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPartnersPurchasePointsBonusPercent();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getPartnersPurchasePointsBonusUsdtRate();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string personal_purchase_game_token_bonus_percent = 1;
 * @return {string}
 */
proto.mlmbox.types.Distribution.State.Config.prototype.getPersonalPurchaseGameTokenBonusPercent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Distribution.State.Config} returns this
 */
proto.mlmbox.types.Distribution.State.Config.prototype.setPersonalPurchaseGameTokenBonusPercent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string partners_purchase_game_token_bonus_percent = 2;
 * @return {string}
 */
proto.mlmbox.types.Distribution.State.Config.prototype.getPartnersPurchaseGameTokenBonusPercent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Distribution.State.Config} returns this
 */
proto.mlmbox.types.Distribution.State.Config.prototype.setPartnersPurchaseGameTokenBonusPercent = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string partners_purchase_points_bonus_percent = 3;
 * @return {string}
 */
proto.mlmbox.types.Distribution.State.Config.prototype.getPartnersPurchasePointsBonusPercent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Distribution.State.Config} returns this
 */
proto.mlmbox.types.Distribution.State.Config.prototype.setPartnersPurchasePointsBonusPercent = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string partners_purchase_points_bonus_usdt_rate = 4;
 * @return {string}
 */
proto.mlmbox.types.Distribution.State.Config.prototype.getPartnersPurchasePointsBonusUsdtRate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Distribution.State.Config} returns this
 */
proto.mlmbox.types.Distribution.State.Config.prototype.setPartnersPurchasePointsBonusUsdtRate = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string web3_address = 1;
 * @return {string}
 */
proto.mlmbox.types.Distribution.State.prototype.getWeb3Address = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Distribution.State} returns this
 */
proto.mlmbox.types.Distribution.State.prototype.setWeb3Address = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 web3_address_attached_at = 2;
 * @return {number}
 */
proto.mlmbox.types.Distribution.State.prototype.getWeb3AddressAttachedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Distribution.State} returns this
 */
proto.mlmbox.types.Distribution.State.prototype.setWeb3AddressAttachedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Holder.Balance holder_balance = 3;
 * @return {?proto.mlmbox.types.Distribution.Holder.Balance}
 */
proto.mlmbox.types.Distribution.State.prototype.getHolderBalance = function() {
  return /** @type{?proto.mlmbox.types.Distribution.Holder.Balance} */ (
    jspb.Message.getWrapperField(this, proto.mlmbox.types.Distribution.Holder.Balance, 3));
};


/**
 * @param {?proto.mlmbox.types.Distribution.Holder.Balance|undefined} value
 * @return {!proto.mlmbox.types.Distribution.State} returns this
*/
proto.mlmbox.types.Distribution.State.prototype.setHolderBalance = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Distribution.State} returns this
 */
proto.mlmbox.types.Distribution.State.prototype.clearHolderBalance = function() {
  return this.setHolderBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Distribution.State.prototype.hasHolderBalance = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string income_balance_frozen = 4;
 * @return {string}
 */
proto.mlmbox.types.Distribution.State.prototype.getIncomeBalanceFrozen = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Distribution.State} returns this
 */
proto.mlmbox.types.Distribution.State.prototype.setIncomeBalanceFrozen = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Bonus.Summary income_bonuses_statistics = 5;
 * @return {?proto.mlmbox.types.Bonus.Summary}
 */
proto.mlmbox.types.Distribution.State.prototype.getIncomeBonusesStatistics = function() {
  return /** @type{?proto.mlmbox.types.Bonus.Summary} */ (
    jspb.Message.getWrapperField(this, mlmbox_types_bonus_pb.Bonus.Summary, 5));
};


/**
 * @param {?proto.mlmbox.types.Bonus.Summary|undefined} value
 * @return {!proto.mlmbox.types.Distribution.State} returns this
*/
proto.mlmbox.types.Distribution.State.prototype.setIncomeBonusesStatistics = function(value) {
  return jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Distribution.State} returns this
 */
proto.mlmbox.types.Distribution.State.prototype.clearIncomeBonusesStatistics = function() {
  return this.setIncomeBonusesStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Distribution.State.prototype.hasIncomeBonusesStatistics = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string points_balance_frozen = 6;
 * @return {string}
 */
proto.mlmbox.types.Distribution.State.prototype.getPointsBalanceFrozen = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Distribution.State} returns this
 */
proto.mlmbox.types.Distribution.State.prototype.setPointsBalanceFrozen = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string points_balance_available = 7;
 * @return {string}
 */
proto.mlmbox.types.Distribution.State.prototype.getPointsBalanceAvailable = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Distribution.State} returns this
 */
proto.mlmbox.types.Distribution.State.prototype.setPointsBalanceAvailable = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};


/**
 * optional string cashback_balance_frozen = 8;
 * @return {string}
 */
proto.mlmbox.types.Distribution.State.prototype.getCashbackBalanceFrozen = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Distribution.State} returns this
 */
proto.mlmbox.types.Distribution.State.prototype.setCashbackBalanceFrozen = function(value) {
  return jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional Bonus.Summary cashback_bonuses_statistics = 9;
 * @return {?proto.mlmbox.types.Bonus.Summary}
 */
proto.mlmbox.types.Distribution.State.prototype.getCashbackBonusesStatistics = function() {
  return /** @type{?proto.mlmbox.types.Bonus.Summary} */ (
    jspb.Message.getWrapperField(this, mlmbox_types_bonus_pb.Bonus.Summary, 9));
};


/**
 * @param {?proto.mlmbox.types.Bonus.Summary|undefined} value
 * @return {!proto.mlmbox.types.Distribution.State} returns this
*/
proto.mlmbox.types.Distribution.State.prototype.setCashbackBonusesStatistics = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Distribution.State} returns this
 */
proto.mlmbox.types.Distribution.State.prototype.clearCashbackBonusesStatistics = function() {
  return this.setCashbackBonusesStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Distribution.State.prototype.hasCashbackBonusesStatistics = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Config config = 10;
 * @return {?proto.mlmbox.types.Distribution.State.Config}
 */
proto.mlmbox.types.Distribution.State.prototype.getConfig = function() {
  return /** @type{?proto.mlmbox.types.Distribution.State.Config} */ (
    jspb.Message.getWrapperField(this, proto.mlmbox.types.Distribution.State.Config, 10));
};


/**
 * @param {?proto.mlmbox.types.Distribution.State.Config|undefined} value
 * @return {!proto.mlmbox.types.Distribution.State} returns this
*/
proto.mlmbox.types.Distribution.State.prototype.setConfig = function(value) {
  return jspb.Message.setWrapperField(this, 10, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Distribution.State} returns this
 */
proto.mlmbox.types.Distribution.State.prototype.clearConfig = function() {
  return this.setConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Distribution.State.prototype.hasConfig = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mlmbox.types.Distribution.Holder.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Distribution.Holder.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Distribution.Holder.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Distribution.Holder} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Distribution.Holder.toObject = function(includeInstance, msg) {
  var f, obj = {
    state: (f = msg.getState()) && proto.mlmbox.types.Distribution.Holder.State.toObject(includeInstance, f),
    partnersQuantity: jspb.Message.getFieldWithDefault(msg, 2, 0),
    partnersHoldBalance: (f = msg.getPartnersHoldBalance()) && proto.mlmbox.types.Distribution.Holder.Balance.toObject(includeInstance, f),
    topPartnersList: jspb.Message.toObjectList(msg.getTopPartnersList(),
    proto.mlmbox.types.Distribution.Holder.Partner.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Distribution.Holder}
 */
proto.mlmbox.types.Distribution.Holder.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Distribution.Holder;
  return proto.mlmbox.types.Distribution.Holder.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Distribution.Holder} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Distribution.Holder}
 */
proto.mlmbox.types.Distribution.Holder.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mlmbox.types.Distribution.Holder.State;
      reader.readMessage(value,proto.mlmbox.types.Distribution.Holder.State.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPartnersQuantity(value);
      break;
    case 3:
      var value = new proto.mlmbox.types.Distribution.Holder.Balance;
      reader.readMessage(value,proto.mlmbox.types.Distribution.Holder.Balance.deserializeBinaryFromReader);
      msg.setPartnersHoldBalance(value);
      break;
    case 4:
      var value = new proto.mlmbox.types.Distribution.Holder.Partner;
      reader.readMessage(value,proto.mlmbox.types.Distribution.Holder.Partner.deserializeBinaryFromReader);
      msg.addTopPartners(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Distribution.Holder.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Distribution.Holder.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Distribution.Holder} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Distribution.Holder.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mlmbox.types.Distribution.Holder.State.serializeBinaryToWriter
    );
  }
  f = message.getPartnersQuantity();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getPartnersHoldBalance();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.mlmbox.types.Distribution.Holder.Balance.serializeBinaryToWriter
    );
  }
  f = message.getTopPartnersList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.mlmbox.types.Distribution.Holder.Partner.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Distribution.Holder.Balance.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Distribution.Holder.Balance.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Distribution.Holder.Balance} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Distribution.Holder.Balance.toObject = function(includeInstance, msg) {
  var f, obj = {
    web3: jspb.Message.getFieldWithDefault(msg, 1, ""),
    wallet: jspb.Message.getFieldWithDefault(msg, 2, ""),
    exchange: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Distribution.Holder.Balance}
 */
proto.mlmbox.types.Distribution.Holder.Balance.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Distribution.Holder.Balance;
  return proto.mlmbox.types.Distribution.Holder.Balance.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Distribution.Holder.Balance} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Distribution.Holder.Balance}
 */
proto.mlmbox.types.Distribution.Holder.Balance.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWeb3(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setWallet(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setExchange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Distribution.Holder.Balance.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Distribution.Holder.Balance.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Distribution.Holder.Balance} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Distribution.Holder.Balance.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWeb3();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWallet();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getExchange();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional string web3 = 1;
 * @return {string}
 */
proto.mlmbox.types.Distribution.Holder.Balance.prototype.getWeb3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Distribution.Holder.Balance} returns this
 */
proto.mlmbox.types.Distribution.Holder.Balance.prototype.setWeb3 = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string wallet = 2;
 * @return {string}
 */
proto.mlmbox.types.Distribution.Holder.Balance.prototype.getWallet = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Distribution.Holder.Balance} returns this
 */
proto.mlmbox.types.Distribution.Holder.Balance.prototype.setWallet = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string exchange = 3;
 * @return {string}
 */
proto.mlmbox.types.Distribution.Holder.Balance.prototype.getExchange = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Distribution.Holder.Balance} returns this
 */
proto.mlmbox.types.Distribution.Holder.Balance.prototype.setExchange = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Distribution.Holder.State.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Distribution.Holder.State.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Distribution.Holder.State} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Distribution.Holder.State.toObject = function(includeInstance, msg) {
  var f, obj = {
    web3Address: jspb.Message.getFieldWithDefault(msg, 1, ""),
    web3AddressAttachedAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    balance: (f = msg.getBalance()) && proto.mlmbox.types.Distribution.Holder.Balance.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Distribution.Holder.State}
 */
proto.mlmbox.types.Distribution.Holder.State.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Distribution.Holder.State;
  return proto.mlmbox.types.Distribution.Holder.State.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Distribution.Holder.State} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Distribution.Holder.State}
 */
proto.mlmbox.types.Distribution.Holder.State.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setWeb3Address(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWeb3AddressAttachedAt(value);
      break;
    case 3:
      var value = new proto.mlmbox.types.Distribution.Holder.Balance;
      reader.readMessage(value,proto.mlmbox.types.Distribution.Holder.Balance.deserializeBinaryFromReader);
      msg.setBalance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Distribution.Holder.State.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Distribution.Holder.State.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Distribution.Holder.State} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Distribution.Holder.State.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getWeb3Address();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getWeb3AddressAttachedAt();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getBalance();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.mlmbox.types.Distribution.Holder.Balance.serializeBinaryToWriter
    );
  }
};


/**
 * optional string web3_address = 1;
 * @return {string}
 */
proto.mlmbox.types.Distribution.Holder.State.prototype.getWeb3Address = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Distribution.Holder.State} returns this
 */
proto.mlmbox.types.Distribution.Holder.State.prototype.setWeb3Address = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint32 web3_address_attached_at = 2;
 * @return {number}
 */
proto.mlmbox.types.Distribution.Holder.State.prototype.getWeb3AddressAttachedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Distribution.Holder.State} returns this
 */
proto.mlmbox.types.Distribution.Holder.State.prototype.setWeb3AddressAttachedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Balance balance = 3;
 * @return {?proto.mlmbox.types.Distribution.Holder.Balance}
 */
proto.mlmbox.types.Distribution.Holder.State.prototype.getBalance = function() {
  return /** @type{?proto.mlmbox.types.Distribution.Holder.Balance} */ (
    jspb.Message.getWrapperField(this, proto.mlmbox.types.Distribution.Holder.Balance, 3));
};


/**
 * @param {?proto.mlmbox.types.Distribution.Holder.Balance|undefined} value
 * @return {!proto.mlmbox.types.Distribution.Holder.State} returns this
*/
proto.mlmbox.types.Distribution.Holder.State.prototype.setBalance = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Distribution.Holder.State} returns this
 */
proto.mlmbox.types.Distribution.Holder.State.prototype.clearBalance = function() {
  return this.setBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Distribution.Holder.State.prototype.hasBalance = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Distribution.Holder.Partner.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Distribution.Holder.Partner.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Distribution.Holder.Partner} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Distribution.Holder.Partner.toObject = function(includeInstance, msg) {
  var f, obj = {
    account: (f = msg.getAccount()) && mlmbox_types_account_pb.Account.Info.toObject(includeInstance, f),
    state: (f = msg.getState()) && proto.mlmbox.types.Distribution.Holder.State.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Distribution.Holder.Partner}
 */
proto.mlmbox.types.Distribution.Holder.Partner.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Distribution.Holder.Partner;
  return proto.mlmbox.types.Distribution.Holder.Partner.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Distribution.Holder.Partner} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Distribution.Holder.Partner}
 */
proto.mlmbox.types.Distribution.Holder.Partner.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new mlmbox_types_account_pb.Account.Info;
      reader.readMessage(value,mlmbox_types_account_pb.Account.Info.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    case 2:
      var value = new proto.mlmbox.types.Distribution.Holder.State;
      reader.readMessage(value,proto.mlmbox.types.Distribution.Holder.State.deserializeBinaryFromReader);
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Distribution.Holder.Partner.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Distribution.Holder.Partner.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Distribution.Holder.Partner} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Distribution.Holder.Partner.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      mlmbox_types_account_pb.Account.Info.serializeBinaryToWriter
    );
  }
  f = message.getState();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mlmbox.types.Distribution.Holder.State.serializeBinaryToWriter
    );
  }
};


/**
 * optional Account.Info account = 1;
 * @return {?proto.mlmbox.types.Account.Info}
 */
proto.mlmbox.types.Distribution.Holder.Partner.prototype.getAccount = function() {
  return /** @type{?proto.mlmbox.types.Account.Info} */ (
    jspb.Message.getWrapperField(this, mlmbox_types_account_pb.Account.Info, 1));
};


/**
 * @param {?proto.mlmbox.types.Account.Info|undefined} value
 * @return {!proto.mlmbox.types.Distribution.Holder.Partner} returns this
*/
proto.mlmbox.types.Distribution.Holder.Partner.prototype.setAccount = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Distribution.Holder.Partner} returns this
 */
proto.mlmbox.types.Distribution.Holder.Partner.prototype.clearAccount = function() {
  return this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Distribution.Holder.Partner.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional State state = 2;
 * @return {?proto.mlmbox.types.Distribution.Holder.State}
 */
proto.mlmbox.types.Distribution.Holder.Partner.prototype.getState = function() {
  return /** @type{?proto.mlmbox.types.Distribution.Holder.State} */ (
    jspb.Message.getWrapperField(this, proto.mlmbox.types.Distribution.Holder.State, 2));
};


/**
 * @param {?proto.mlmbox.types.Distribution.Holder.State|undefined} value
 * @return {!proto.mlmbox.types.Distribution.Holder.Partner} returns this
*/
proto.mlmbox.types.Distribution.Holder.Partner.prototype.setState = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Distribution.Holder.Partner} returns this
 */
proto.mlmbox.types.Distribution.Holder.Partner.prototype.clearState = function() {
  return this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Distribution.Holder.Partner.prototype.hasState = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional State state = 1;
 * @return {?proto.mlmbox.types.Distribution.Holder.State}
 */
proto.mlmbox.types.Distribution.Holder.prototype.getState = function() {
  return /** @type{?proto.mlmbox.types.Distribution.Holder.State} */ (
    jspb.Message.getWrapperField(this, proto.mlmbox.types.Distribution.Holder.State, 1));
};


/**
 * @param {?proto.mlmbox.types.Distribution.Holder.State|undefined} value
 * @return {!proto.mlmbox.types.Distribution.Holder} returns this
*/
proto.mlmbox.types.Distribution.Holder.prototype.setState = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Distribution.Holder} returns this
 */
proto.mlmbox.types.Distribution.Holder.prototype.clearState = function() {
  return this.setState(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Distribution.Holder.prototype.hasState = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 partners_quantity = 2;
 * @return {number}
 */
proto.mlmbox.types.Distribution.Holder.prototype.getPartnersQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Distribution.Holder} returns this
 */
proto.mlmbox.types.Distribution.Holder.prototype.setPartnersQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional Balance partners_hold_balance = 3;
 * @return {?proto.mlmbox.types.Distribution.Holder.Balance}
 */
proto.mlmbox.types.Distribution.Holder.prototype.getPartnersHoldBalance = function() {
  return /** @type{?proto.mlmbox.types.Distribution.Holder.Balance} */ (
    jspb.Message.getWrapperField(this, proto.mlmbox.types.Distribution.Holder.Balance, 3));
};


/**
 * @param {?proto.mlmbox.types.Distribution.Holder.Balance|undefined} value
 * @return {!proto.mlmbox.types.Distribution.Holder} returns this
*/
proto.mlmbox.types.Distribution.Holder.prototype.setPartnersHoldBalance = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Distribution.Holder} returns this
 */
proto.mlmbox.types.Distribution.Holder.prototype.clearPartnersHoldBalance = function() {
  return this.setPartnersHoldBalance(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Distribution.Holder.prototype.hasPartnersHoldBalance = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Partner top_partners = 4;
 * @return {!Array<!proto.mlmbox.types.Distribution.Holder.Partner>}
 */
proto.mlmbox.types.Distribution.Holder.prototype.getTopPartnersList = function() {
  return /** @type{!Array<!proto.mlmbox.types.Distribution.Holder.Partner>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mlmbox.types.Distribution.Holder.Partner, 4));
};


/**
 * @param {!Array<!proto.mlmbox.types.Distribution.Holder.Partner>} value
 * @return {!proto.mlmbox.types.Distribution.Holder} returns this
*/
proto.mlmbox.types.Distribution.Holder.prototype.setTopPartnersList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.mlmbox.types.Distribution.Holder.Partner=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mlmbox.types.Distribution.Holder.Partner}
 */
proto.mlmbox.types.Distribution.Holder.prototype.addTopPartners = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.mlmbox.types.Distribution.Holder.Partner, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mlmbox.types.Distribution.Holder} returns this
 */
proto.mlmbox.types.Distribution.Holder.prototype.clearTopPartnersList = function() {
  return this.setTopPartnersList([]);
};


goog.object.extend(exports, proto.mlmbox.types);
