// source: mlmbox/types/account.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {missingRequire} reports error on implicit type usages.
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = (function() {
  if (this) { return this; }
  if (typeof window !== 'undefined') { return window; }
  if (typeof global !== 'undefined') { return global; }
  if (typeof self !== 'undefined') { return self; }
  return Function('return this')();
}.call(null));

var mlmbox_types_asset_pb = require('../../mlmbox/types/asset_pb.js');
goog.object.extend(proto, mlmbox_types_asset_pb);
var mlmbox_types_relationship_pb = require('../../mlmbox/types/relationship_pb.js');
goog.object.extend(proto, mlmbox_types_relationship_pb);
var mlmbox_types_google_authenticator_pb = require('../../mlmbox/types/google_authenticator_pb.js');
goog.object.extend(proto, mlmbox_types_google_authenticator_pb);
goog.exportSymbol('proto.mlmbox.types.Account', null, global);
goog.exportSymbol('proto.mlmbox.types.Account.FullInfo', null, global);
goog.exportSymbol('proto.mlmbox.types.Account.FullInfo.List', null, global);
goog.exportSymbol('proto.mlmbox.types.Account.Id', null, global);
goog.exportSymbol('proto.mlmbox.types.Account.Id.UniqueFieldCase', null, global);
goog.exportSymbol('proto.mlmbox.types.Account.Profile', null, global);
goog.exportSymbol('proto.mlmbox.types.Account.Profile.Ava', null, global);
goog.exportSymbol('proto.mlmbox.types.Account.RefLink', null, global);
goog.exportSymbol('proto.mlmbox.types.Account.ShortInfo', null, global);
goog.exportSymbol('proto.mlmbox.types.Account.ShortInfo.List', null, global);
goog.exportSymbol('proto.mlmbox.types.Account.Statistics', null, global);
goog.exportSymbol('proto.mlmbox.types.Account.Username', null, global);
goog.exportSymbol('proto.mlmbox.types.Matrix', null, global);
goog.exportSymbol('proto.mlmbox.types.Matrix.Config', null, global);
goog.exportSymbol('proto.mlmbox.types.Matrix.Config.Reinvest', null, global);
goog.exportSymbol('proto.mlmbox.types.Matrix.Group', null, global);
goog.exportSymbol('proto.mlmbox.types.Matrix.Invoice', null, global);
goog.exportSymbol('proto.mlmbox.types.Matrix.Invoice.PreviewResponse', null, global);
goog.exportSymbol('proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item', null, global);
goog.exportSymbol('proto.mlmbox.types.Matrix.Invoice.Request', null, global);
goog.exportSymbol('proto.mlmbox.types.Matrix.Invoice.VerifiedResponse', null, global);
goog.exportSymbol('proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item', null, global);
goog.exportSymbol('proto.mlmbox.types.Matrix.Position', null, global);
goog.exportSymbol('proto.mlmbox.types.Matrix.Position.Id', null, global);
goog.exportSymbol('proto.mlmbox.types.Matrix.Tree', null, global);
goog.exportSymbol('proto.mlmbox.types.Matrix.TreeAccount', null, global);
goog.exportSymbol('proto.mlmbox.types.Matrix.TreeAccount.Entity', null, global);
goog.exportSymbol('proto.mlmbox.types.Matrix.View', null, global);
goog.exportSymbol('proto.mlmbox.types.Matrix.View.Request', null, global);
goog.exportSymbol('proto.mlmbox.types.Matrix.View.Request.ByTreeAccount', null, global);
goog.exportSymbol('proto.mlmbox.types.Matrix.View.Request.QueryCase', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Account = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Account, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Account.displayName = 'proto.mlmbox.types.Account';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Account.Id = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.mlmbox.types.Account.Id.oneofGroups_);
};
goog.inherits(proto.mlmbox.types.Account.Id, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Account.Id.displayName = 'proto.mlmbox.types.Account.Id';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Account.RefLink = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Account.RefLink, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Account.RefLink.displayName = 'proto.mlmbox.types.Account.RefLink';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Account.Username = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Account.Username, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Account.Username.displayName = 'proto.mlmbox.types.Account.Username';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Account.Profile = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Account.Profile, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Account.Profile.displayName = 'proto.mlmbox.types.Account.Profile';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Account.Profile.Ava = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Account.Profile.Ava, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Account.Profile.Ava.displayName = 'proto.mlmbox.types.Account.Profile.Ava';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Account.Statistics = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Account.Statistics, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Account.Statistics.displayName = 'proto.mlmbox.types.Account.Statistics';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Account.ShortInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Account.ShortInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Account.ShortInfo.displayName = 'proto.mlmbox.types.Account.ShortInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Account.ShortInfo.List = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mlmbox.types.Account.ShortInfo.List.repeatedFields_, null);
};
goog.inherits(proto.mlmbox.types.Account.ShortInfo.List, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Account.ShortInfo.List.displayName = 'proto.mlmbox.types.Account.ShortInfo.List';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Account.FullInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Account.FullInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Account.FullInfo.displayName = 'proto.mlmbox.types.Account.FullInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Account.FullInfo.List = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mlmbox.types.Account.FullInfo.List.repeatedFields_, null);
};
goog.inherits(proto.mlmbox.types.Account.FullInfo.List, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Account.FullInfo.List.displayName = 'proto.mlmbox.types.Account.FullInfo.List';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Matrix = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mlmbox.types.Matrix.repeatedFields_, null);
};
goog.inherits(proto.mlmbox.types.Matrix, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Matrix.displayName = 'proto.mlmbox.types.Matrix';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Matrix.Group = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Matrix.Group, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Matrix.Group.displayName = 'proto.mlmbox.types.Matrix.Group';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Matrix.Tree = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Matrix.Tree, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Matrix.Tree.displayName = 'proto.mlmbox.types.Matrix.Tree';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Matrix.Position = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Matrix.Position, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Matrix.Position.displayName = 'proto.mlmbox.types.Matrix.Position';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Matrix.Position.Id = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Matrix.Position.Id, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Matrix.Position.Id.displayName = 'proto.mlmbox.types.Matrix.Position.Id';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Matrix.TreeAccount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mlmbox.types.Matrix.TreeAccount.repeatedFields_, null);
};
goog.inherits(proto.mlmbox.types.Matrix.TreeAccount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Matrix.TreeAccount.displayName = 'proto.mlmbox.types.Matrix.TreeAccount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Matrix.TreeAccount.Entity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Matrix.TreeAccount.Entity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Matrix.TreeAccount.Entity.displayName = 'proto.mlmbox.types.Matrix.TreeAccount.Entity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Matrix.View = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mlmbox.types.Matrix.View.repeatedFields_, null);
};
goog.inherits(proto.mlmbox.types.Matrix.View, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Matrix.View.displayName = 'proto.mlmbox.types.Matrix.View';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Matrix.View.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.mlmbox.types.Matrix.View.Request.oneofGroups_);
};
goog.inherits(proto.mlmbox.types.Matrix.View.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Matrix.View.Request.displayName = 'proto.mlmbox.types.Matrix.View.Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Matrix.View.Request.ByTreeAccount = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Matrix.View.Request.ByTreeAccount, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Matrix.View.Request.ByTreeAccount.displayName = 'proto.mlmbox.types.Matrix.View.Request.ByTreeAccount';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Matrix.Invoice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Matrix.Invoice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Matrix.Invoice.displayName = 'proto.mlmbox.types.Matrix.Invoice';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Matrix.Invoice.Request = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Matrix.Invoice.Request, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Matrix.Invoice.Request.displayName = 'proto.mlmbox.types.Matrix.Invoice.Request';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mlmbox.types.Matrix.Invoice.PreviewResponse.repeatedFields_, null);
};
goog.inherits(proto.mlmbox.types.Matrix.Invoice.PreviewResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Matrix.Invoice.PreviewResponse.displayName = 'proto.mlmbox.types.Matrix.Invoice.PreviewResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.displayName = 'proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.repeatedFields_, null);
};
goog.inherits(proto.mlmbox.types.Matrix.Invoice.VerifiedResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.displayName = 'proto.mlmbox.types.Matrix.Invoice.VerifiedResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item.displayName = 'proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Matrix.Config = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Matrix.Config, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Matrix.Config.displayName = 'proto.mlmbox.types.Matrix.Config';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.mlmbox.types.Matrix.Config.Reinvest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.mlmbox.types.Matrix.Config.Reinvest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.mlmbox.types.Matrix.Config.Reinvest.displayName = 'proto.mlmbox.types.Matrix.Config.Reinvest';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Account.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Account.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Account} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.toObject = function(includeInstance, msg) {
  var f, obj = {
    info: (f = msg.getInfo()) && proto.mlmbox.types.Account.FullInfo.toObject(includeInstance, f),
    googleAuthenticator: (f = msg.getGoogleAuthenticator()) && mlmbox_types_google_authenticator_pb.GoogleAuthenticator.toObject(includeInstance, f),
    matrixConfig: (f = msg.getMatrixConfig()) && proto.mlmbox.types.Matrix.toObject(includeInstance, f),
    locale: jspb.Message.getFieldWithDefault(msg, 5, ""),
    isAdmin: jspb.Message.getBooleanFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Account}
 */
proto.mlmbox.types.Account.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Account;
  return proto.mlmbox.types.Account.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Account} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Account}
 */
proto.mlmbox.types.Account.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mlmbox.types.Account.FullInfo;
      reader.readMessage(value,proto.mlmbox.types.Account.FullInfo.deserializeBinaryFromReader);
      msg.setInfo(value);
      break;
    case 2:
      var value = new mlmbox_types_google_authenticator_pb.GoogleAuthenticator;
      reader.readMessage(value,mlmbox_types_google_authenticator_pb.GoogleAuthenticator.deserializeBinaryFromReader);
      msg.setGoogleAuthenticator(value);
      break;
    case 3:
      var value = new proto.mlmbox.types.Matrix;
      reader.readMessage(value,proto.mlmbox.types.Matrix.deserializeBinaryFromReader);
      msg.setMatrixConfig(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setLocale(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIsAdmin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Account.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Account.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Account} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mlmbox.types.Account.FullInfo.serializeBinaryToWriter
    );
  }
  f = message.getGoogleAuthenticator();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      mlmbox_types_google_authenticator_pb.GoogleAuthenticator.serializeBinaryToWriter
    );
  }
  f = message.getMatrixConfig();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.mlmbox.types.Matrix.serializeBinaryToWriter
    );
  }
  f = message.getLocale();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getIsAdmin();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.mlmbox.types.Account.Id.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.mlmbox.types.Account.Id.UniqueFieldCase = {
  UNIQUE_FIELD_NOT_SET: 0,
  ACCOUNT_ID: 1,
  ACCOUNT_LOGIN: 2,
  REF_LINK_ID: 3
};

/**
 * @return {proto.mlmbox.types.Account.Id.UniqueFieldCase}
 */
proto.mlmbox.types.Account.Id.prototype.getUniqueFieldCase = function() {
  return /** @type {proto.mlmbox.types.Account.Id.UniqueFieldCase} */(jspb.Message.computeOneofCase(this, proto.mlmbox.types.Account.Id.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Account.Id.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Account.Id.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Account.Id} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.Id.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    accountLogin: jspb.Message.getFieldWithDefault(msg, 2, ""),
    refLinkId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Account.Id}
 */
proto.mlmbox.types.Account.Id.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Account.Id;
  return proto.mlmbox.types.Account.Id.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Account.Id} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Account.Id}
 */
proto.mlmbox.types.Account.Id.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAccountId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccountLogin(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefLinkId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Account.Id.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Account.Id.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Account.Id} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.Id.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint32 account_id = 1;
 * @return {number}
 */
proto.mlmbox.types.Account.Id.prototype.getAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Account.Id} returns this
 */
proto.mlmbox.types.Account.Id.prototype.setAccountId = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.mlmbox.types.Account.Id.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mlmbox.types.Account.Id} returns this
 */
proto.mlmbox.types.Account.Id.prototype.clearAccountId = function() {
  return jspb.Message.setOneofField(this, 1, proto.mlmbox.types.Account.Id.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Account.Id.prototype.hasAccountId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string account_login = 2;
 * @return {string}
 */
proto.mlmbox.types.Account.Id.prototype.getAccountLogin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Account.Id} returns this
 */
proto.mlmbox.types.Account.Id.prototype.setAccountLogin = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.mlmbox.types.Account.Id.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mlmbox.types.Account.Id} returns this
 */
proto.mlmbox.types.Account.Id.prototype.clearAccountLogin = function() {
  return jspb.Message.setOneofField(this, 2, proto.mlmbox.types.Account.Id.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Account.Id.prototype.hasAccountLogin = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string ref_link_id = 3;
 * @return {string}
 */
proto.mlmbox.types.Account.Id.prototype.getRefLinkId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Account.Id} returns this
 */
proto.mlmbox.types.Account.Id.prototype.setRefLinkId = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.mlmbox.types.Account.Id.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mlmbox.types.Account.Id} returns this
 */
proto.mlmbox.types.Account.Id.prototype.clearRefLinkId = function() {
  return jspb.Message.setOneofField(this, 3, proto.mlmbox.types.Account.Id.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Account.Id.prototype.hasRefLinkId = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Account.RefLink.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Account.RefLink.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Account.RefLink} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.RefLink.toObject = function(includeInstance, msg) {
  var f, obj = {
    accountId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    sourceId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Account.RefLink}
 */
proto.mlmbox.types.Account.RefLink.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Account.RefLink;
  return proto.mlmbox.types.Account.RefLink.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Account.RefLink} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Account.RefLink}
 */
proto.mlmbox.types.Account.RefLink.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAccountId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSourceId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Account.RefLink.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Account.RefLink.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Account.RefLink} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.RefLink.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getAccountId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSourceId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 account_id = 1;
 * @return {number}
 */
proto.mlmbox.types.Account.RefLink.prototype.getAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Account.RefLink} returns this
 */
proto.mlmbox.types.Account.RefLink.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 source_id = 2;
 * @return {number}
 */
proto.mlmbox.types.Account.RefLink.prototype.getSourceId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Account.RefLink} returns this
 */
proto.mlmbox.types.Account.RefLink.prototype.setSourceId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Account.Username.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Account.Username.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Account.Username} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.Username.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    login: jspb.Message.getFieldWithDefault(msg, 2, ""),
    refLinkId: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Account.Username}
 */
proto.mlmbox.types.Account.Username.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Account.Username;
  return proto.mlmbox.types.Account.Username.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Account.Username} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Account.Username}
 */
proto.mlmbox.types.Account.Username.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLogin(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRefLinkId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Account.Username.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Account.Username.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Account.Username} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.Username.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getLogin();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getRefLinkId();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.mlmbox.types.Account.Username.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Account.Username} returns this
 */
proto.mlmbox.types.Account.Username.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string login = 2;
 * @return {string}
 */
proto.mlmbox.types.Account.Username.prototype.getLogin = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Account.Username} returns this
 */
proto.mlmbox.types.Account.Username.prototype.setLogin = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string ref_link_id = 3;
 * @return {string}
 */
proto.mlmbox.types.Account.Username.prototype.getRefLinkId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Account.Username} returns this
 */
proto.mlmbox.types.Account.Username.prototype.setRefLinkId = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Account.Profile.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Account.Profile.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Account.Profile} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.Profile.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstName: jspb.Message.getFieldWithDefault(msg, 1, ""),
    lastName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    tgId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    ava: (f = msg.getAva()) && proto.mlmbox.types.Account.Profile.Ava.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Account.Profile}
 */
proto.mlmbox.types.Account.Profile.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Account.Profile;
  return proto.mlmbox.types.Account.Profile.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Account.Profile} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Account.Profile}
 */
proto.mlmbox.types.Account.Profile.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTgId(value);
      break;
    case 4:
      var value = new proto.mlmbox.types.Account.Profile.Ava;
      reader.readMessage(value,proto.mlmbox.types.Account.Profile.Ava.deserializeBinaryFromReader);
      msg.setAva(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Account.Profile.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Account.Profile.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Account.Profile} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.Profile.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFirstName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getLastName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getTgId();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getAva();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.mlmbox.types.Account.Profile.Ava.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Account.Profile.Ava.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Account.Profile.Ava.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Account.Profile.Ava} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.Profile.Ava.toObject = function(includeInstance, msg) {
  var f, obj = {
    collectionId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    entityId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Account.Profile.Ava}
 */
proto.mlmbox.types.Account.Profile.Ava.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Account.Profile.Ava;
  return proto.mlmbox.types.Account.Profile.Ava.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Account.Profile.Ava} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Account.Profile.Ava}
 */
proto.mlmbox.types.Account.Profile.Ava.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCollectionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEntityId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Account.Profile.Ava.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Account.Profile.Ava.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Account.Profile.Ava} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.Profile.Ava.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollectionId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getEntityId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 collection_id = 1;
 * @return {number}
 */
proto.mlmbox.types.Account.Profile.Ava.prototype.getCollectionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Account.Profile.Ava} returns this
 */
proto.mlmbox.types.Account.Profile.Ava.prototype.setCollectionId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 entity_id = 2;
 * @return {number}
 */
proto.mlmbox.types.Account.Profile.Ava.prototype.getEntityId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Account.Profile.Ava} returns this
 */
proto.mlmbox.types.Account.Profile.Ava.prototype.setEntityId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string first_name = 1;
 * @return {string}
 */
proto.mlmbox.types.Account.Profile.prototype.getFirstName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Account.Profile} returns this
 */
proto.mlmbox.types.Account.Profile.prototype.setFirstName = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string last_name = 2;
 * @return {string}
 */
proto.mlmbox.types.Account.Profile.prototype.getLastName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Account.Profile} returns this
 */
proto.mlmbox.types.Account.Profile.prototype.setLastName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint64 tg_id = 3;
 * @return {number}
 */
proto.mlmbox.types.Account.Profile.prototype.getTgId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Account.Profile} returns this
 */
proto.mlmbox.types.Account.Profile.prototype.setTgId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Ava ava = 4;
 * @return {?proto.mlmbox.types.Account.Profile.Ava}
 */
proto.mlmbox.types.Account.Profile.prototype.getAva = function() {
  return /** @type{?proto.mlmbox.types.Account.Profile.Ava} */ (
    jspb.Message.getWrapperField(this, proto.mlmbox.types.Account.Profile.Ava, 4));
};


/**
 * @param {?proto.mlmbox.types.Account.Profile.Ava|undefined} value
 * @return {!proto.mlmbox.types.Account.Profile} returns this
*/
proto.mlmbox.types.Account.Profile.prototype.setAva = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Account.Profile} returns this
 */
proto.mlmbox.types.Account.Profile.prototype.clearAva = function() {
  return this.setAva(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Account.Profile.prototype.hasAva = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Account.Statistics.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Account.Statistics.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Account.Statistics} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.Statistics.toObject = function(includeInstance, msg) {
  var f, obj = {
    partnersQuantity: jspb.Message.getFieldWithDefault(msg, 1, 0),
    teamQuantity: jspb.Message.getFieldWithDefault(msg, 2, 0),
    matrixPartnersQuantity: jspb.Message.getFieldWithDefault(msg, 3, 0),
    matrixTeamQuantity: jspb.Message.getFieldWithDefault(msg, 4, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Account.Statistics}
 */
proto.mlmbox.types.Account.Statistics.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Account.Statistics;
  return proto.mlmbox.types.Account.Statistics.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Account.Statistics} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Account.Statistics}
 */
proto.mlmbox.types.Account.Statistics.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPartnersQuantity(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTeamQuantity(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMatrixPartnersQuantity(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMatrixTeamQuantity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Account.Statistics.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Account.Statistics.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Account.Statistics} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.Statistics.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPartnersQuantity();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTeamQuantity();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getMatrixPartnersQuantity();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getMatrixTeamQuantity();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional uint32 partners_quantity = 1;
 * @return {number}
 */
proto.mlmbox.types.Account.Statistics.prototype.getPartnersQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Account.Statistics} returns this
 */
proto.mlmbox.types.Account.Statistics.prototype.setPartnersQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 team_quantity = 2;
 * @return {number}
 */
proto.mlmbox.types.Account.Statistics.prototype.getTeamQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Account.Statistics} returns this
 */
proto.mlmbox.types.Account.Statistics.prototype.setTeamQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 matrix_partners_quantity = 3;
 * @return {number}
 */
proto.mlmbox.types.Account.Statistics.prototype.getMatrixPartnersQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Account.Statistics} returns this
 */
proto.mlmbox.types.Account.Statistics.prototype.setMatrixPartnersQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 matrix_team_quantity = 4;
 * @return {number}
 */
proto.mlmbox.types.Account.Statistics.prototype.getMatrixTeamQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Account.Statistics} returns this
 */
proto.mlmbox.types.Account.Statistics.prototype.setMatrixTeamQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Account.ShortInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Account.ShortInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Account.ShortInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.ShortInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    profile: (f = msg.getProfile()) && proto.mlmbox.types.Account.Profile.toObject(includeInstance, f),
    account: (f = msg.getAccount()) && proto.mlmbox.types.Account.Username.toObject(includeInstance, f),
    referral: (f = msg.getReferral()) && proto.mlmbox.types.Account.Username.toObject(includeInstance, f),
    relationship: (f = msg.getRelationship()) && mlmbox_types_relationship_pb.Relationship.toObject(includeInstance, f),
    registrationAt: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Account.ShortInfo}
 */
proto.mlmbox.types.Account.ShortInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Account.ShortInfo;
  return proto.mlmbox.types.Account.ShortInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Account.ShortInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Account.ShortInfo}
 */
proto.mlmbox.types.Account.ShortInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mlmbox.types.Account.Profile;
      reader.readMessage(value,proto.mlmbox.types.Account.Profile.deserializeBinaryFromReader);
      msg.setProfile(value);
      break;
    case 2:
      var value = new proto.mlmbox.types.Account.Username;
      reader.readMessage(value,proto.mlmbox.types.Account.Username.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    case 3:
      var value = new proto.mlmbox.types.Account.Username;
      reader.readMessage(value,proto.mlmbox.types.Account.Username.deserializeBinaryFromReader);
      msg.setReferral(value);
      break;
    case 4:
      var value = new mlmbox_types_relationship_pb.Relationship;
      reader.readMessage(value,mlmbox_types_relationship_pb.Relationship.deserializeBinaryFromReader);
      msg.setRelationship(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRegistrationAt(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Account.ShortInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Account.ShortInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Account.ShortInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.ShortInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProfile();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mlmbox.types.Account.Profile.serializeBinaryToWriter
    );
  }
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mlmbox.types.Account.Username.serializeBinaryToWriter
    );
  }
  f = message.getReferral();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.mlmbox.types.Account.Username.serializeBinaryToWriter
    );
  }
  f = message.getRelationship();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      mlmbox_types_relationship_pb.Relationship.serializeBinaryToWriter
    );
  }
  f = message.getRegistrationAt();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mlmbox.types.Account.ShortInfo.List.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Account.ShortInfo.List.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Account.ShortInfo.List.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Account.ShortInfo.List} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.ShortInfo.List.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.mlmbox.types.Account.ShortInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Account.ShortInfo.List}
 */
proto.mlmbox.types.Account.ShortInfo.List.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Account.ShortInfo.List;
  return proto.mlmbox.types.Account.ShortInfo.List.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Account.ShortInfo.List} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Account.ShortInfo.List}
 */
proto.mlmbox.types.Account.ShortInfo.List.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mlmbox.types.Account.ShortInfo;
      reader.readMessage(value,proto.mlmbox.types.Account.ShortInfo.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Account.ShortInfo.List.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Account.ShortInfo.List.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Account.ShortInfo.List} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.ShortInfo.List.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mlmbox.types.Account.ShortInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated ShortInfo items = 1;
 * @return {!Array<!proto.mlmbox.types.Account.ShortInfo>}
 */
proto.mlmbox.types.Account.ShortInfo.List.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.mlmbox.types.Account.ShortInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mlmbox.types.Account.ShortInfo, 1));
};


/**
 * @param {!Array<!proto.mlmbox.types.Account.ShortInfo>} value
 * @return {!proto.mlmbox.types.Account.ShortInfo.List} returns this
*/
proto.mlmbox.types.Account.ShortInfo.List.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mlmbox.types.Account.ShortInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mlmbox.types.Account.ShortInfo}
 */
proto.mlmbox.types.Account.ShortInfo.List.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mlmbox.types.Account.ShortInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mlmbox.types.Account.ShortInfo.List} returns this
 */
proto.mlmbox.types.Account.ShortInfo.List.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * optional Profile profile = 1;
 * @return {?proto.mlmbox.types.Account.Profile}
 */
proto.mlmbox.types.Account.ShortInfo.prototype.getProfile = function() {
  return /** @type{?proto.mlmbox.types.Account.Profile} */ (
    jspb.Message.getWrapperField(this, proto.mlmbox.types.Account.Profile, 1));
};


/**
 * @param {?proto.mlmbox.types.Account.Profile|undefined} value
 * @return {!proto.mlmbox.types.Account.ShortInfo} returns this
*/
proto.mlmbox.types.Account.ShortInfo.prototype.setProfile = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Account.ShortInfo} returns this
 */
proto.mlmbox.types.Account.ShortInfo.prototype.clearProfile = function() {
  return this.setProfile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Account.ShortInfo.prototype.hasProfile = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Username account = 2;
 * @return {?proto.mlmbox.types.Account.Username}
 */
proto.mlmbox.types.Account.ShortInfo.prototype.getAccount = function() {
  return /** @type{?proto.mlmbox.types.Account.Username} */ (
    jspb.Message.getWrapperField(this, proto.mlmbox.types.Account.Username, 2));
};


/**
 * @param {?proto.mlmbox.types.Account.Username|undefined} value
 * @return {!proto.mlmbox.types.Account.ShortInfo} returns this
*/
proto.mlmbox.types.Account.ShortInfo.prototype.setAccount = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Account.ShortInfo} returns this
 */
proto.mlmbox.types.Account.ShortInfo.prototype.clearAccount = function() {
  return this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Account.ShortInfo.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Username referral = 3;
 * @return {?proto.mlmbox.types.Account.Username}
 */
proto.mlmbox.types.Account.ShortInfo.prototype.getReferral = function() {
  return /** @type{?proto.mlmbox.types.Account.Username} */ (
    jspb.Message.getWrapperField(this, proto.mlmbox.types.Account.Username, 3));
};


/**
 * @param {?proto.mlmbox.types.Account.Username|undefined} value
 * @return {!proto.mlmbox.types.Account.ShortInfo} returns this
*/
proto.mlmbox.types.Account.ShortInfo.prototype.setReferral = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Account.ShortInfo} returns this
 */
proto.mlmbox.types.Account.ShortInfo.prototype.clearReferral = function() {
  return this.setReferral(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Account.ShortInfo.prototype.hasReferral = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Relationship relationship = 4;
 * @return {?proto.mlmbox.types.Relationship}
 */
proto.mlmbox.types.Account.ShortInfo.prototype.getRelationship = function() {
  return /** @type{?proto.mlmbox.types.Relationship} */ (
    jspb.Message.getWrapperField(this, mlmbox_types_relationship_pb.Relationship, 4));
};


/**
 * @param {?proto.mlmbox.types.Relationship|undefined} value
 * @return {!proto.mlmbox.types.Account.ShortInfo} returns this
*/
proto.mlmbox.types.Account.ShortInfo.prototype.setRelationship = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Account.ShortInfo} returns this
 */
proto.mlmbox.types.Account.ShortInfo.prototype.clearRelationship = function() {
  return this.setRelationship(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Account.ShortInfo.prototype.hasRelationship = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 registration_at = 5;
 * @return {number}
 */
proto.mlmbox.types.Account.ShortInfo.prototype.getRegistrationAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Account.ShortInfo} returns this
 */
proto.mlmbox.types.Account.ShortInfo.prototype.setRegistrationAt = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Account.FullInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Account.FullInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Account.FullInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.FullInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    profile: (f = msg.getProfile()) && proto.mlmbox.types.Account.Profile.toObject(includeInstance, f),
    account: (f = msg.getAccount()) && proto.mlmbox.types.Account.Username.toObject(includeInstance, f),
    referral: (f = msg.getReferral()) && proto.mlmbox.types.Account.Username.toObject(includeInstance, f),
    relationship: (f = msg.getRelationship()) && mlmbox_types_relationship_pb.Relationship.toObject(includeInstance, f),
    registrationAt: jspb.Message.getFieldWithDefault(msg, 5, 0),
    matrixStartedAt: jspb.Message.getFieldWithDefault(msg, 6, 0),
    matrixTreeIdsBitMask: jspb.Message.getFieldWithDefault(msg, 7, 0),
    referralBranch: jspb.Message.getFieldWithDefault(msg, 8, 0),
    statistics: (f = msg.getStatistics()) && proto.mlmbox.types.Account.Statistics.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Account.FullInfo}
 */
proto.mlmbox.types.Account.FullInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Account.FullInfo;
  return proto.mlmbox.types.Account.FullInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Account.FullInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Account.FullInfo}
 */
proto.mlmbox.types.Account.FullInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mlmbox.types.Account.Profile;
      reader.readMessage(value,proto.mlmbox.types.Account.Profile.deserializeBinaryFromReader);
      msg.setProfile(value);
      break;
    case 2:
      var value = new proto.mlmbox.types.Account.Username;
      reader.readMessage(value,proto.mlmbox.types.Account.Username.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    case 3:
      var value = new proto.mlmbox.types.Account.Username;
      reader.readMessage(value,proto.mlmbox.types.Account.Username.deserializeBinaryFromReader);
      msg.setReferral(value);
      break;
    case 4:
      var value = new mlmbox_types_relationship_pb.Relationship;
      reader.readMessage(value,mlmbox_types_relationship_pb.Relationship.deserializeBinaryFromReader);
      msg.setRelationship(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRegistrationAt(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMatrixStartedAt(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMatrixTreeIdsBitMask(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReferralBranch(value);
      break;
    case 9:
      var value = new proto.mlmbox.types.Account.Statistics;
      reader.readMessage(value,proto.mlmbox.types.Account.Statistics.deserializeBinaryFromReader);
      msg.setStatistics(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Account.FullInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Account.FullInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Account.FullInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.FullInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProfile();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.mlmbox.types.Account.Profile.serializeBinaryToWriter
    );
  }
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.mlmbox.types.Account.Username.serializeBinaryToWriter
    );
  }
  f = message.getReferral();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.mlmbox.types.Account.Username.serializeBinaryToWriter
    );
  }
  f = message.getRelationship();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      mlmbox_types_relationship_pb.Relationship.serializeBinaryToWriter
    );
  }
  f = message.getRegistrationAt();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getMatrixStartedAt();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getMatrixTreeIdsBitMask();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getReferralBranch();
  if (f !== 0) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = message.getStatistics();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.mlmbox.types.Account.Statistics.serializeBinaryToWriter
    );
  }
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mlmbox.types.Account.FullInfo.List.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Account.FullInfo.List.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Account.FullInfo.List.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Account.FullInfo.List} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.FullInfo.List.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.mlmbox.types.Account.FullInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Account.FullInfo.List}
 */
proto.mlmbox.types.Account.FullInfo.List.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Account.FullInfo.List;
  return proto.mlmbox.types.Account.FullInfo.List.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Account.FullInfo.List} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Account.FullInfo.List}
 */
proto.mlmbox.types.Account.FullInfo.List.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mlmbox.types.Account.FullInfo;
      reader.readMessage(value,proto.mlmbox.types.Account.FullInfo.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Account.FullInfo.List.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Account.FullInfo.List.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Account.FullInfo.List} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Account.FullInfo.List.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mlmbox.types.Account.FullInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FullInfo items = 1;
 * @return {!Array<!proto.mlmbox.types.Account.FullInfo>}
 */
proto.mlmbox.types.Account.FullInfo.List.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.mlmbox.types.Account.FullInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mlmbox.types.Account.FullInfo, 1));
};


/**
 * @param {!Array<!proto.mlmbox.types.Account.FullInfo>} value
 * @return {!proto.mlmbox.types.Account.FullInfo.List} returns this
*/
proto.mlmbox.types.Account.FullInfo.List.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mlmbox.types.Account.FullInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mlmbox.types.Account.FullInfo}
 */
proto.mlmbox.types.Account.FullInfo.List.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mlmbox.types.Account.FullInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mlmbox.types.Account.FullInfo.List} returns this
 */
proto.mlmbox.types.Account.FullInfo.List.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * optional Profile profile = 1;
 * @return {?proto.mlmbox.types.Account.Profile}
 */
proto.mlmbox.types.Account.FullInfo.prototype.getProfile = function() {
  return /** @type{?proto.mlmbox.types.Account.Profile} */ (
    jspb.Message.getWrapperField(this, proto.mlmbox.types.Account.Profile, 1));
};


/**
 * @param {?proto.mlmbox.types.Account.Profile|undefined} value
 * @return {!proto.mlmbox.types.Account.FullInfo} returns this
*/
proto.mlmbox.types.Account.FullInfo.prototype.setProfile = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Account.FullInfo} returns this
 */
proto.mlmbox.types.Account.FullInfo.prototype.clearProfile = function() {
  return this.setProfile(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Account.FullInfo.prototype.hasProfile = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Username account = 2;
 * @return {?proto.mlmbox.types.Account.Username}
 */
proto.mlmbox.types.Account.FullInfo.prototype.getAccount = function() {
  return /** @type{?proto.mlmbox.types.Account.Username} */ (
    jspb.Message.getWrapperField(this, proto.mlmbox.types.Account.Username, 2));
};


/**
 * @param {?proto.mlmbox.types.Account.Username|undefined} value
 * @return {!proto.mlmbox.types.Account.FullInfo} returns this
*/
proto.mlmbox.types.Account.FullInfo.prototype.setAccount = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Account.FullInfo} returns this
 */
proto.mlmbox.types.Account.FullInfo.prototype.clearAccount = function() {
  return this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Account.FullInfo.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Username referral = 3;
 * @return {?proto.mlmbox.types.Account.Username}
 */
proto.mlmbox.types.Account.FullInfo.prototype.getReferral = function() {
  return /** @type{?proto.mlmbox.types.Account.Username} */ (
    jspb.Message.getWrapperField(this, proto.mlmbox.types.Account.Username, 3));
};


/**
 * @param {?proto.mlmbox.types.Account.Username|undefined} value
 * @return {!proto.mlmbox.types.Account.FullInfo} returns this
*/
proto.mlmbox.types.Account.FullInfo.prototype.setReferral = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Account.FullInfo} returns this
 */
proto.mlmbox.types.Account.FullInfo.prototype.clearReferral = function() {
  return this.setReferral(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Account.FullInfo.prototype.hasReferral = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Relationship relationship = 4;
 * @return {?proto.mlmbox.types.Relationship}
 */
proto.mlmbox.types.Account.FullInfo.prototype.getRelationship = function() {
  return /** @type{?proto.mlmbox.types.Relationship} */ (
    jspb.Message.getWrapperField(this, mlmbox_types_relationship_pb.Relationship, 4));
};


/**
 * @param {?proto.mlmbox.types.Relationship|undefined} value
 * @return {!proto.mlmbox.types.Account.FullInfo} returns this
*/
proto.mlmbox.types.Account.FullInfo.prototype.setRelationship = function(value) {
  return jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Account.FullInfo} returns this
 */
proto.mlmbox.types.Account.FullInfo.prototype.clearRelationship = function() {
  return this.setRelationship(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Account.FullInfo.prototype.hasRelationship = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 registration_at = 5;
 * @return {number}
 */
proto.mlmbox.types.Account.FullInfo.prototype.getRegistrationAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Account.FullInfo} returns this
 */
proto.mlmbox.types.Account.FullInfo.prototype.setRegistrationAt = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 matrix_started_at = 6;
 * @return {number}
 */
proto.mlmbox.types.Account.FullInfo.prototype.getMatrixStartedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Account.FullInfo} returns this
 */
proto.mlmbox.types.Account.FullInfo.prototype.setMatrixStartedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 matrix_tree_ids_bit_mask = 7;
 * @return {number}
 */
proto.mlmbox.types.Account.FullInfo.prototype.getMatrixTreeIdsBitMask = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Account.FullInfo} returns this
 */
proto.mlmbox.types.Account.FullInfo.prototype.setMatrixTreeIdsBitMask = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional uint32 referral_branch = 8;
 * @return {number}
 */
proto.mlmbox.types.Account.FullInfo.prototype.getReferralBranch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Account.FullInfo} returns this
 */
proto.mlmbox.types.Account.FullInfo.prototype.setReferralBranch = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional Statistics statistics = 9;
 * @return {?proto.mlmbox.types.Account.Statistics}
 */
proto.mlmbox.types.Account.FullInfo.prototype.getStatistics = function() {
  return /** @type{?proto.mlmbox.types.Account.Statistics} */ (
    jspb.Message.getWrapperField(this, proto.mlmbox.types.Account.Statistics, 9));
};


/**
 * @param {?proto.mlmbox.types.Account.Statistics|undefined} value
 * @return {!proto.mlmbox.types.Account.FullInfo} returns this
*/
proto.mlmbox.types.Account.FullInfo.prototype.setStatistics = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Account.FullInfo} returns this
 */
proto.mlmbox.types.Account.FullInfo.prototype.clearStatistics = function() {
  return this.setStatistics(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Account.FullInfo.prototype.hasStatistics = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional FullInfo info = 1;
 * @return {?proto.mlmbox.types.Account.FullInfo}
 */
proto.mlmbox.types.Account.prototype.getInfo = function() {
  return /** @type{?proto.mlmbox.types.Account.FullInfo} */ (
    jspb.Message.getWrapperField(this, proto.mlmbox.types.Account.FullInfo, 1));
};


/**
 * @param {?proto.mlmbox.types.Account.FullInfo|undefined} value
 * @return {!proto.mlmbox.types.Account} returns this
*/
proto.mlmbox.types.Account.prototype.setInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Account} returns this
 */
proto.mlmbox.types.Account.prototype.clearInfo = function() {
  return this.setInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Account.prototype.hasInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional GoogleAuthenticator google_authenticator = 2;
 * @return {?proto.mlmbox.types.GoogleAuthenticator}
 */
proto.mlmbox.types.Account.prototype.getGoogleAuthenticator = function() {
  return /** @type{?proto.mlmbox.types.GoogleAuthenticator} */ (
    jspb.Message.getWrapperField(this, mlmbox_types_google_authenticator_pb.GoogleAuthenticator, 2));
};


/**
 * @param {?proto.mlmbox.types.GoogleAuthenticator|undefined} value
 * @return {!proto.mlmbox.types.Account} returns this
*/
proto.mlmbox.types.Account.prototype.setGoogleAuthenticator = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Account} returns this
 */
proto.mlmbox.types.Account.prototype.clearGoogleAuthenticator = function() {
  return this.setGoogleAuthenticator(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Account.prototype.hasGoogleAuthenticator = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Matrix matrix_config = 3;
 * @return {?proto.mlmbox.types.Matrix}
 */
proto.mlmbox.types.Account.prototype.getMatrixConfig = function() {
  return /** @type{?proto.mlmbox.types.Matrix} */ (
    jspb.Message.getWrapperField(this, proto.mlmbox.types.Matrix, 3));
};


/**
 * @param {?proto.mlmbox.types.Matrix|undefined} value
 * @return {!proto.mlmbox.types.Account} returns this
*/
proto.mlmbox.types.Account.prototype.setMatrixConfig = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Account} returns this
 */
proto.mlmbox.types.Account.prototype.clearMatrixConfig = function() {
  return this.setMatrixConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Account.prototype.hasMatrixConfig = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string locale = 5;
 * @return {string}
 */
proto.mlmbox.types.Account.prototype.getLocale = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Account} returns this
 */
proto.mlmbox.types.Account.prototype.setLocale = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bool is_admin = 6;
 * @return {boolean}
 */
proto.mlmbox.types.Account.prototype.getIsAdmin = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mlmbox.types.Account} returns this
 */
proto.mlmbox.types.Account.prototype.setIsAdmin = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mlmbox.types.Matrix.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Matrix.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Matrix.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Matrix} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupsList: jspb.Message.toObjectList(msg.getGroupsList(),
    proto.mlmbox.types.Matrix.Group.toObject, includeInstance),
    treesList: jspb.Message.toObjectList(msg.getTreesList(),
    proto.mlmbox.types.Matrix.Tree.toObject, includeInstance),
    treeAccountsList: jspb.Message.toObjectList(msg.getTreeAccountsList(),
    proto.mlmbox.types.Matrix.TreeAccount.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Matrix}
 */
proto.mlmbox.types.Matrix.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Matrix;
  return proto.mlmbox.types.Matrix.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Matrix} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Matrix}
 */
proto.mlmbox.types.Matrix.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mlmbox.types.Matrix.Group;
      reader.readMessage(value,proto.mlmbox.types.Matrix.Group.deserializeBinaryFromReader);
      msg.addGroups(value);
      break;
    case 2:
      var value = new proto.mlmbox.types.Matrix.Tree;
      reader.readMessage(value,proto.mlmbox.types.Matrix.Tree.deserializeBinaryFromReader);
      msg.addTrees(value);
      break;
    case 3:
      var value = new proto.mlmbox.types.Matrix.TreeAccount;
      reader.readMessage(value,proto.mlmbox.types.Matrix.TreeAccount.deserializeBinaryFromReader);
      msg.addTreeAccounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Matrix.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Matrix.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Matrix} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mlmbox.types.Matrix.Group.serializeBinaryToWriter
    );
  }
  f = message.getTreesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.mlmbox.types.Matrix.Tree.serializeBinaryToWriter
    );
  }
  f = message.getTreeAccountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.mlmbox.types.Matrix.TreeAccount.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Matrix.Group.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Matrix.Group.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Matrix.Group} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Group.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Matrix.Group}
 */
proto.mlmbox.types.Matrix.Group.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Matrix.Group;
  return proto.mlmbox.types.Matrix.Group.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Matrix.Group} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Matrix.Group}
 */
proto.mlmbox.types.Matrix.Group.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Matrix.Group.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Matrix.Group.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Matrix.Group} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Group.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.mlmbox.types.Matrix.Group.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.Group} returns this
 */
proto.mlmbox.types.Matrix.Group.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.mlmbox.types.Matrix.Group.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Matrix.Group} returns this
 */
proto.mlmbox.types.Matrix.Group.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Matrix.Tree.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Matrix.Tree.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Matrix.Tree} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Tree.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    title: jspb.Message.getFieldWithDefault(msg, 2, ""),
    groupId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    positionsQuantity: jspb.Message.getFieldWithDefault(msg, 4, 0),
    defaultPositionWidth: jspb.Message.getFieldWithDefault(msg, 5, 0),
    amount: (f = msg.getAmount()) && mlmbox_types_asset_pb.Asset.Amount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Matrix.Tree}
 */
proto.mlmbox.types.Matrix.Tree.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Matrix.Tree;
  return proto.mlmbox.types.Matrix.Tree.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Matrix.Tree} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Matrix.Tree}
 */
proto.mlmbox.types.Matrix.Tree.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGroupId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPositionsQuantity(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDefaultPositionWidth(value);
      break;
    case 6:
      var value = new mlmbox_types_asset_pb.Asset.Amount;
      reader.readMessage(value,mlmbox_types_asset_pb.Asset.Amount.deserializeBinaryFromReader);
      msg.setAmount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Matrix.Tree.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Matrix.Tree.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Matrix.Tree} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Tree.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTitle();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getGroupId();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getPositionsQuantity();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getDefaultPositionWidth();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getAmount();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      mlmbox_types_asset_pb.Asset.Amount.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.mlmbox.types.Matrix.Tree.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.Tree} returns this
 */
proto.mlmbox.types.Matrix.Tree.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string title = 2;
 * @return {string}
 */
proto.mlmbox.types.Matrix.Tree.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Matrix.Tree} returns this
 */
proto.mlmbox.types.Matrix.Tree.prototype.setTitle = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional uint32 group_id = 3;
 * @return {number}
 */
proto.mlmbox.types.Matrix.Tree.prototype.getGroupId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.Tree} returns this
 */
proto.mlmbox.types.Matrix.Tree.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 positions_quantity = 4;
 * @return {number}
 */
proto.mlmbox.types.Matrix.Tree.prototype.getPositionsQuantity = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.Tree} returns this
 */
proto.mlmbox.types.Matrix.Tree.prototype.setPositionsQuantity = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 default_position_width = 5;
 * @return {number}
 */
proto.mlmbox.types.Matrix.Tree.prototype.getDefaultPositionWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.Tree} returns this
 */
proto.mlmbox.types.Matrix.Tree.prototype.setDefaultPositionWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional Asset.Amount amount = 6;
 * @return {?proto.mlmbox.types.Asset.Amount}
 */
proto.mlmbox.types.Matrix.Tree.prototype.getAmount = function() {
  return /** @type{?proto.mlmbox.types.Asset.Amount} */ (
    jspb.Message.getWrapperField(this, mlmbox_types_asset_pb.Asset.Amount, 6));
};


/**
 * @param {?proto.mlmbox.types.Asset.Amount|undefined} value
 * @return {!proto.mlmbox.types.Matrix.Tree} returns this
*/
proto.mlmbox.types.Matrix.Tree.prototype.setAmount = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Matrix.Tree} returns this
 */
proto.mlmbox.types.Matrix.Tree.prototype.clearAmount = function() {
  return this.setAmount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Matrix.Tree.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 6) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Matrix.Position.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Matrix.Position.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Matrix.Position} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Position.toObject = function(includeInstance, msg) {
  var f, obj = {
    positionId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    positionRefId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    positionRefLine: jspb.Message.getFieldWithDefault(msg, 3, 0),
    positionWidth: jspb.Message.getFieldWithDefault(msg, 4, 0),
    treeAccountId: jspb.Message.getFieldWithDefault(msg, 5, 0),
    reinvestEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 6, false),
    account: (f = msg.getAccount()) && proto.mlmbox.types.Account.ShortInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Matrix.Position}
 */
proto.mlmbox.types.Matrix.Position.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Matrix.Position;
  return proto.mlmbox.types.Matrix.Position.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Matrix.Position} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Matrix.Position}
 */
proto.mlmbox.types.Matrix.Position.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPositionId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPositionRefId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPositionRefLine(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPositionWidth(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTreeAccountId(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReinvestEnabled(value);
      break;
    case 7:
      var value = new proto.mlmbox.types.Account.ShortInfo;
      reader.readMessage(value,proto.mlmbox.types.Account.ShortInfo.deserializeBinaryFromReader);
      msg.setAccount(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Matrix.Position.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Matrix.Position.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Matrix.Position} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Position.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPositionId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getPositionRefId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getPositionRefLine();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getPositionWidth();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getTreeAccountId();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getReinvestEnabled();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
  f = message.getAccount();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.mlmbox.types.Account.ShortInfo.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Matrix.Position.Id.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Matrix.Position.Id.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Matrix.Position.Id} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Position.Id.toObject = function(includeInstance, msg) {
  var f, obj = {
    viewPositionId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Matrix.Position.Id}
 */
proto.mlmbox.types.Matrix.Position.Id.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Matrix.Position.Id;
  return proto.mlmbox.types.Matrix.Position.Id.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Matrix.Position.Id} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Matrix.Position.Id}
 */
proto.mlmbox.types.Matrix.Position.Id.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setViewPositionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Matrix.Position.Id.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Matrix.Position.Id.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Matrix.Position.Id} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Position.Id.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getViewPositionId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 view_position_id = 1;
 * @return {number}
 */
proto.mlmbox.types.Matrix.Position.Id.prototype.getViewPositionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.Position.Id} returns this
 */
proto.mlmbox.types.Matrix.Position.Id.prototype.setViewPositionId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 position_id = 1;
 * @return {number}
 */
proto.mlmbox.types.Matrix.Position.prototype.getPositionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.Position} returns this
 */
proto.mlmbox.types.Matrix.Position.prototype.setPositionId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 position_ref_id = 2;
 * @return {number}
 */
proto.mlmbox.types.Matrix.Position.prototype.getPositionRefId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.Position} returns this
 */
proto.mlmbox.types.Matrix.Position.prototype.setPositionRefId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 position_ref_line = 3;
 * @return {number}
 */
proto.mlmbox.types.Matrix.Position.prototype.getPositionRefLine = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.Position} returns this
 */
proto.mlmbox.types.Matrix.Position.prototype.setPositionRefLine = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint32 position_width = 4;
 * @return {number}
 */
proto.mlmbox.types.Matrix.Position.prototype.getPositionWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.Position} returns this
 */
proto.mlmbox.types.Matrix.Position.prototype.setPositionWidth = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional uint32 tree_account_id = 5;
 * @return {number}
 */
proto.mlmbox.types.Matrix.Position.prototype.getTreeAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.Position} returns this
 */
proto.mlmbox.types.Matrix.Position.prototype.setTreeAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional bool reinvest_enabled = 6;
 * @return {boolean}
 */
proto.mlmbox.types.Matrix.Position.prototype.getReinvestEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 6, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mlmbox.types.Matrix.Position} returns this
 */
proto.mlmbox.types.Matrix.Position.prototype.setReinvestEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 6, value);
};


/**
 * optional Account.ShortInfo account = 7;
 * @return {?proto.mlmbox.types.Account.ShortInfo}
 */
proto.mlmbox.types.Matrix.Position.prototype.getAccount = function() {
  return /** @type{?proto.mlmbox.types.Account.ShortInfo} */ (
    jspb.Message.getWrapperField(this, proto.mlmbox.types.Account.ShortInfo, 7));
};


/**
 * @param {?proto.mlmbox.types.Account.ShortInfo|undefined} value
 * @return {!proto.mlmbox.types.Matrix.Position} returns this
*/
proto.mlmbox.types.Matrix.Position.prototype.setAccount = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Matrix.Position} returns this
 */
proto.mlmbox.types.Matrix.Position.prototype.clearAccount = function() {
  return this.setAccount(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Matrix.Position.prototype.hasAccount = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mlmbox.types.Matrix.TreeAccount.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Matrix.TreeAccount.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Matrix.TreeAccount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Matrix.TreeAccount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.TreeAccount.toObject = function(includeInstance, msg) {
  var f, obj = {
    treeId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    entitiesList: jspb.Message.toObjectList(msg.getEntitiesList(),
    proto.mlmbox.types.Matrix.TreeAccount.Entity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Matrix.TreeAccount}
 */
proto.mlmbox.types.Matrix.TreeAccount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Matrix.TreeAccount;
  return proto.mlmbox.types.Matrix.TreeAccount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Matrix.TreeAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Matrix.TreeAccount}
 */
proto.mlmbox.types.Matrix.TreeAccount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTreeId(value);
      break;
    case 4:
      var value = new proto.mlmbox.types.Matrix.TreeAccount.Entity;
      reader.readMessage(value,proto.mlmbox.types.Matrix.TreeAccount.Entity.deserializeBinaryFromReader);
      msg.addEntities(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Matrix.TreeAccount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Matrix.TreeAccount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Matrix.TreeAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.TreeAccount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTreeId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.mlmbox.types.Matrix.TreeAccount.Entity.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Matrix.TreeAccount.Entity.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Matrix.TreeAccount.Entity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Matrix.TreeAccount.Entity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.TreeAccount.Entity.toObject = function(includeInstance, msg) {
  var f, obj = {
    treeAccountId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    positionId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    filled: jspb.Message.getBooleanFieldWithDefault(msg, 3, false),
    viewAccess: jspb.Message.getBooleanFieldWithDefault(msg, 4, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Matrix.TreeAccount.Entity}
 */
proto.mlmbox.types.Matrix.TreeAccount.Entity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Matrix.TreeAccount.Entity;
  return proto.mlmbox.types.Matrix.TreeAccount.Entity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Matrix.TreeAccount.Entity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Matrix.TreeAccount.Entity}
 */
proto.mlmbox.types.Matrix.TreeAccount.Entity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTreeAccountId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPositionId(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFilled(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setViewAccess(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Matrix.TreeAccount.Entity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Matrix.TreeAccount.Entity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Matrix.TreeAccount.Entity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.TreeAccount.Entity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTreeAccountId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getPositionId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getFilled();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getViewAccess();
  if (f) {
    writer.writeBool(
      4,
      f
    );
  }
};


/**
 * optional uint32 tree_account_id = 1;
 * @return {number}
 */
proto.mlmbox.types.Matrix.TreeAccount.Entity.prototype.getTreeAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.TreeAccount.Entity} returns this
 */
proto.mlmbox.types.Matrix.TreeAccount.Entity.prototype.setTreeAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 position_id = 2;
 * @return {number}
 */
proto.mlmbox.types.Matrix.TreeAccount.Entity.prototype.getPositionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.TreeAccount.Entity} returns this
 */
proto.mlmbox.types.Matrix.TreeAccount.Entity.prototype.setPositionId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional bool filled = 3;
 * @return {boolean}
 */
proto.mlmbox.types.Matrix.TreeAccount.Entity.prototype.getFilled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 3, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mlmbox.types.Matrix.TreeAccount.Entity} returns this
 */
proto.mlmbox.types.Matrix.TreeAccount.Entity.prototype.setFilled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional bool view_access = 4;
 * @return {boolean}
 */
proto.mlmbox.types.Matrix.TreeAccount.Entity.prototype.getViewAccess = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 4, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mlmbox.types.Matrix.TreeAccount.Entity} returns this
 */
proto.mlmbox.types.Matrix.TreeAccount.Entity.prototype.setViewAccess = function(value) {
  return jspb.Message.setProto3BooleanField(this, 4, value);
};


/**
 * optional uint32 tree_id = 1;
 * @return {number}
 */
proto.mlmbox.types.Matrix.TreeAccount.prototype.getTreeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.TreeAccount} returns this
 */
proto.mlmbox.types.Matrix.TreeAccount.prototype.setTreeId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * repeated Entity entities = 4;
 * @return {!Array<!proto.mlmbox.types.Matrix.TreeAccount.Entity>}
 */
proto.mlmbox.types.Matrix.TreeAccount.prototype.getEntitiesList = function() {
  return /** @type{!Array<!proto.mlmbox.types.Matrix.TreeAccount.Entity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mlmbox.types.Matrix.TreeAccount.Entity, 4));
};


/**
 * @param {!Array<!proto.mlmbox.types.Matrix.TreeAccount.Entity>} value
 * @return {!proto.mlmbox.types.Matrix.TreeAccount} returns this
*/
proto.mlmbox.types.Matrix.TreeAccount.prototype.setEntitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.mlmbox.types.Matrix.TreeAccount.Entity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mlmbox.types.Matrix.TreeAccount.Entity}
 */
proto.mlmbox.types.Matrix.TreeAccount.prototype.addEntities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.mlmbox.types.Matrix.TreeAccount.Entity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mlmbox.types.Matrix.TreeAccount} returns this
 */
proto.mlmbox.types.Matrix.TreeAccount.prototype.clearEntitiesList = function() {
  return this.setEntitiesList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mlmbox.types.Matrix.View.repeatedFields_ = [4,5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Matrix.View.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Matrix.View.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Matrix.View} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.View.toObject = function(includeInstance, msg) {
  var f, obj = {
    treeId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    selfPositionId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    viewPositionId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    positionsList: jspb.Message.toObjectList(msg.getPositionsList(),
    proto.mlmbox.types.Matrix.Position.toObject, includeInstance),
    viewTreeAccountEntitiesList: jspb.Message.toObjectList(msg.getViewTreeAccountEntitiesList(),
    proto.mlmbox.types.Matrix.TreeAccount.Entity.toObject, includeInstance),
    selfMatrixTreeIdsBitMask: jspb.Message.getFieldWithDefault(msg, 6, 0),
    viewMatrixTreeIdsBitMask: jspb.Message.getFieldWithDefault(msg, 7, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Matrix.View}
 */
proto.mlmbox.types.Matrix.View.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Matrix.View;
  return proto.mlmbox.types.Matrix.View.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Matrix.View} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Matrix.View}
 */
proto.mlmbox.types.Matrix.View.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTreeId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSelfPositionId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setViewPositionId(value);
      break;
    case 4:
      var value = new proto.mlmbox.types.Matrix.Position;
      reader.readMessage(value,proto.mlmbox.types.Matrix.Position.deserializeBinaryFromReader);
      msg.addPositions(value);
      break;
    case 5:
      var value = new proto.mlmbox.types.Matrix.TreeAccount.Entity;
      reader.readMessage(value,proto.mlmbox.types.Matrix.TreeAccount.Entity.deserializeBinaryFromReader);
      msg.addViewTreeAccountEntities(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSelfMatrixTreeIdsBitMask(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setViewMatrixTreeIdsBitMask(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Matrix.View.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Matrix.View.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Matrix.View} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.View.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTreeId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getSelfPositionId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getViewPositionId();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getPositionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.mlmbox.types.Matrix.Position.serializeBinaryToWriter
    );
  }
  f = message.getViewTreeAccountEntitiesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.mlmbox.types.Matrix.TreeAccount.Entity.serializeBinaryToWriter
    );
  }
  f = message.getSelfMatrixTreeIdsBitMask();
  if (f !== 0) {
    writer.writeInt32(
      6,
      f
    );
  }
  f = message.getViewMatrixTreeIdsBitMask();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.mlmbox.types.Matrix.View.Request.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.mlmbox.types.Matrix.View.Request.QueryCase = {
  QUERY_NOT_SET: 0,
  VIEW_POSITION_ID: 2,
  TREE_ACCOUNT_ID: 3
};

/**
 * @return {proto.mlmbox.types.Matrix.View.Request.QueryCase}
 */
proto.mlmbox.types.Matrix.View.Request.prototype.getQueryCase = function() {
  return /** @type {proto.mlmbox.types.Matrix.View.Request.QueryCase} */(jspb.Message.computeOneofCase(this, proto.mlmbox.types.Matrix.View.Request.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Matrix.View.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Matrix.View.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Matrix.View.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.View.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    viewLevel: jspb.Message.getFieldWithDefault(msg, 1, 0),
    viewPositionId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    treeAccountId: (f = msg.getTreeAccountId()) && proto.mlmbox.types.Matrix.View.Request.ByTreeAccount.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Matrix.View.Request}
 */
proto.mlmbox.types.Matrix.View.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Matrix.View.Request;
  return proto.mlmbox.types.Matrix.View.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Matrix.View.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Matrix.View.Request}
 */
proto.mlmbox.types.Matrix.View.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setViewLevel(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setViewPositionId(value);
      break;
    case 3:
      var value = new proto.mlmbox.types.Matrix.View.Request.ByTreeAccount;
      reader.readMessage(value,proto.mlmbox.types.Matrix.View.Request.ByTreeAccount.deserializeBinaryFromReader);
      msg.setTreeAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Matrix.View.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Matrix.View.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Matrix.View.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.View.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getViewLevel();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getTreeAccountId();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.mlmbox.types.Matrix.View.Request.ByTreeAccount.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Matrix.View.Request.ByTreeAccount.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Matrix.View.Request.ByTreeAccount.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Matrix.View.Request.ByTreeAccount} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.View.Request.ByTreeAccount.toObject = function(includeInstance, msg) {
  var f, obj = {
    treeId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    accountId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Matrix.View.Request.ByTreeAccount}
 */
proto.mlmbox.types.Matrix.View.Request.ByTreeAccount.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Matrix.View.Request.ByTreeAccount;
  return proto.mlmbox.types.Matrix.View.Request.ByTreeAccount.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Matrix.View.Request.ByTreeAccount} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Matrix.View.Request.ByTreeAccount}
 */
proto.mlmbox.types.Matrix.View.Request.ByTreeAccount.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTreeId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAccountId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Matrix.View.Request.ByTreeAccount.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Matrix.View.Request.ByTreeAccount.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Matrix.View.Request.ByTreeAccount} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.View.Request.ByTreeAccount.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTreeId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAccountId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 tree_id = 1;
 * @return {number}
 */
proto.mlmbox.types.Matrix.View.Request.ByTreeAccount.prototype.getTreeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.View.Request.ByTreeAccount} returns this
 */
proto.mlmbox.types.Matrix.View.Request.ByTreeAccount.prototype.setTreeId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 account_id = 2;
 * @return {number}
 */
proto.mlmbox.types.Matrix.View.Request.ByTreeAccount.prototype.getAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.View.Request.ByTreeAccount} returns this
 */
proto.mlmbox.types.Matrix.View.Request.ByTreeAccount.prototype.setAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 view_level = 1;
 * @return {number}
 */
proto.mlmbox.types.Matrix.View.Request.prototype.getViewLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.View.Request} returns this
 */
proto.mlmbox.types.Matrix.View.Request.prototype.setViewLevel = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 view_position_id = 2;
 * @return {number}
 */
proto.mlmbox.types.Matrix.View.Request.prototype.getViewPositionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.View.Request} returns this
 */
proto.mlmbox.types.Matrix.View.Request.prototype.setViewPositionId = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.mlmbox.types.Matrix.View.Request.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.mlmbox.types.Matrix.View.Request} returns this
 */
proto.mlmbox.types.Matrix.View.Request.prototype.clearViewPositionId = function() {
  return jspb.Message.setOneofField(this, 2, proto.mlmbox.types.Matrix.View.Request.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Matrix.View.Request.prototype.hasViewPositionId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional ByTreeAccount tree_account_id = 3;
 * @return {?proto.mlmbox.types.Matrix.View.Request.ByTreeAccount}
 */
proto.mlmbox.types.Matrix.View.Request.prototype.getTreeAccountId = function() {
  return /** @type{?proto.mlmbox.types.Matrix.View.Request.ByTreeAccount} */ (
    jspb.Message.getWrapperField(this, proto.mlmbox.types.Matrix.View.Request.ByTreeAccount, 3));
};


/**
 * @param {?proto.mlmbox.types.Matrix.View.Request.ByTreeAccount|undefined} value
 * @return {!proto.mlmbox.types.Matrix.View.Request} returns this
*/
proto.mlmbox.types.Matrix.View.Request.prototype.setTreeAccountId = function(value) {
  return jspb.Message.setOneofWrapperField(this, 3, proto.mlmbox.types.Matrix.View.Request.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.mlmbox.types.Matrix.View.Request} returns this
 */
proto.mlmbox.types.Matrix.View.Request.prototype.clearTreeAccountId = function() {
  return this.setTreeAccountId(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.mlmbox.types.Matrix.View.Request.prototype.hasTreeAccountId = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 tree_id = 1;
 * @return {number}
 */
proto.mlmbox.types.Matrix.View.prototype.getTreeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.View} returns this
 */
proto.mlmbox.types.Matrix.View.prototype.setTreeId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 self_position_id = 2;
 * @return {number}
 */
proto.mlmbox.types.Matrix.View.prototype.getSelfPositionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.View} returns this
 */
proto.mlmbox.types.Matrix.View.prototype.setSelfPositionId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 view_position_id = 3;
 * @return {number}
 */
proto.mlmbox.types.Matrix.View.prototype.getViewPositionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.View} returns this
 */
proto.mlmbox.types.Matrix.View.prototype.setViewPositionId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated Position positions = 4;
 * @return {!Array<!proto.mlmbox.types.Matrix.Position>}
 */
proto.mlmbox.types.Matrix.View.prototype.getPositionsList = function() {
  return /** @type{!Array<!proto.mlmbox.types.Matrix.Position>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mlmbox.types.Matrix.Position, 4));
};


/**
 * @param {!Array<!proto.mlmbox.types.Matrix.Position>} value
 * @return {!proto.mlmbox.types.Matrix.View} returns this
*/
proto.mlmbox.types.Matrix.View.prototype.setPositionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.mlmbox.types.Matrix.Position=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mlmbox.types.Matrix.Position}
 */
proto.mlmbox.types.Matrix.View.prototype.addPositions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.mlmbox.types.Matrix.Position, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mlmbox.types.Matrix.View} returns this
 */
proto.mlmbox.types.Matrix.View.prototype.clearPositionsList = function() {
  return this.setPositionsList([]);
};


/**
 * repeated TreeAccount.Entity view_tree_account_entities = 5;
 * @return {!Array<!proto.mlmbox.types.Matrix.TreeAccount.Entity>}
 */
proto.mlmbox.types.Matrix.View.prototype.getViewTreeAccountEntitiesList = function() {
  return /** @type{!Array<!proto.mlmbox.types.Matrix.TreeAccount.Entity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mlmbox.types.Matrix.TreeAccount.Entity, 5));
};


/**
 * @param {!Array<!proto.mlmbox.types.Matrix.TreeAccount.Entity>} value
 * @return {!proto.mlmbox.types.Matrix.View} returns this
*/
proto.mlmbox.types.Matrix.View.prototype.setViewTreeAccountEntitiesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.mlmbox.types.Matrix.TreeAccount.Entity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mlmbox.types.Matrix.TreeAccount.Entity}
 */
proto.mlmbox.types.Matrix.View.prototype.addViewTreeAccountEntities = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.mlmbox.types.Matrix.TreeAccount.Entity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mlmbox.types.Matrix.View} returns this
 */
proto.mlmbox.types.Matrix.View.prototype.clearViewTreeAccountEntitiesList = function() {
  return this.setViewTreeAccountEntitiesList([]);
};


/**
 * optional int32 self_matrix_tree_ids_bit_mask = 6;
 * @return {number}
 */
proto.mlmbox.types.Matrix.View.prototype.getSelfMatrixTreeIdsBitMask = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.View} returns this
 */
proto.mlmbox.types.Matrix.View.prototype.setSelfMatrixTreeIdsBitMask = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional int32 view_matrix_tree_ids_bit_mask = 7;
 * @return {number}
 */
proto.mlmbox.types.Matrix.View.prototype.getViewMatrixTreeIdsBitMask = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.View} returns this
 */
proto.mlmbox.types.Matrix.View.prototype.setViewMatrixTreeIdsBitMask = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Matrix.Invoice.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Matrix.Invoice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Matrix.Invoice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Invoice.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Matrix.Invoice}
 */
proto.mlmbox.types.Matrix.Invoice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Matrix.Invoice;
  return proto.mlmbox.types.Matrix.Invoice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Matrix.Invoice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Matrix.Invoice}
 */
proto.mlmbox.types.Matrix.Invoice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Matrix.Invoice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Matrix.Invoice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Matrix.Invoice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Invoice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Matrix.Invoice.Request.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Matrix.Invoice.Request.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Matrix.Invoice.Request} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Invoice.Request.toObject = function(includeInstance, msg) {
  var f, obj = {
    treeId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Matrix.Invoice.Request}
 */
proto.mlmbox.types.Matrix.Invoice.Request.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Matrix.Invoice.Request;
  return proto.mlmbox.types.Matrix.Invoice.Request.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Matrix.Invoice.Request} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Matrix.Invoice.Request}
 */
proto.mlmbox.types.Matrix.Invoice.Request.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTreeId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Matrix.Invoice.Request.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Matrix.Invoice.Request.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Matrix.Invoice.Request} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Invoice.Request.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTreeId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 tree_id = 1;
 * @return {number}
 */
proto.mlmbox.types.Matrix.Invoice.Request.prototype.getTreeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.Invoice.Request} returns this
 */
proto.mlmbox.types.Matrix.Invoice.Request.prototype.setTreeId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Matrix.Invoice.PreviewResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Matrix.Invoice.PreviewResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.toObject, includeInstance),
    billAmountsList: jspb.Message.toObjectList(msg.getBillAmountsList(),
    mlmbox_types_asset_pb.Asset.Amount.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Matrix.Invoice.PreviewResponse}
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Matrix.Invoice.PreviewResponse;
  return proto.mlmbox.types.Matrix.Invoice.PreviewResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Matrix.Invoice.PreviewResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Matrix.Invoice.PreviewResponse}
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item;
      reader.readMessage(value,proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    case 2:
      var value = new mlmbox_types_asset_pb.Asset.Amount;
      reader.readMessage(value,mlmbox_types_asset_pb.Asset.Amount.deserializeBinaryFromReader);
      msg.addBillAmounts(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Matrix.Invoice.PreviewResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Matrix.Invoice.PreviewResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.serializeBinaryToWriter
    );
  }
  f = message.getBillAmountsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      mlmbox_types_asset_pb.Asset.Amount.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.toObject = function(includeInstance, msg) {
  var f, obj = {
    treeId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    assetId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    priceValue: jspb.Message.getFieldWithDefault(msg, 3, ""),
    unlockValue: jspb.Message.getFieldWithDefault(msg, 4, ""),
    amountValue: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item}
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item;
  return proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item}
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTreeId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAssetId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPriceValue(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUnlockValue(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAmountValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTreeId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getAssetId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getPriceValue();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUnlockValue();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getAmountValue();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional uint32 tree_id = 1;
 * @return {number}
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.prototype.getTreeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item} returns this
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.prototype.setTreeId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 asset_id = 2;
 * @return {number}
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.prototype.getAssetId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item} returns this
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.prototype.setAssetId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string price_value = 3;
 * @return {string}
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.prototype.getPriceValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item} returns this
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.prototype.setPriceValue = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string unlock_value = 4;
 * @return {string}
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.prototype.getUnlockValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item} returns this
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.prototype.setUnlockValue = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string amount_value = 5;
 * @return {string}
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.prototype.getAmountValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item} returns this
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item.prototype.setAmountValue = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated Item items = 1;
 * @return {!Array<!proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item>}
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item, 1));
};


/**
 * @param {!Array<!proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item>} value
 * @return {!proto.mlmbox.types.Matrix.Invoice.PreviewResponse} returns this
*/
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item}
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mlmbox.types.Matrix.Invoice.PreviewResponse.Item, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mlmbox.types.Matrix.Invoice.PreviewResponse} returns this
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};


/**
 * repeated Asset.Amount bill_amounts = 2;
 * @return {!Array<!proto.mlmbox.types.Asset.Amount>}
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.prototype.getBillAmountsList = function() {
  return /** @type{!Array<!proto.mlmbox.types.Asset.Amount>} */ (
    jspb.Message.getRepeatedWrapperField(this, mlmbox_types_asset_pb.Asset.Amount, 2));
};


/**
 * @param {!Array<!proto.mlmbox.types.Asset.Amount>} value
 * @return {!proto.mlmbox.types.Matrix.Invoice.PreviewResponse} returns this
*/
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.prototype.setBillAmountsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.mlmbox.types.Asset.Amount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mlmbox.types.Asset.Amount}
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.prototype.addBillAmounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.mlmbox.types.Asset.Amount, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mlmbox.types.Matrix.Invoice.PreviewResponse} returns this
 */
proto.mlmbox.types.Matrix.Invoice.PreviewResponse.prototype.clearBillAmountsList = function() {
  return this.setBillAmountsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Matrix.Invoice.VerifiedResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Matrix.Invoice.VerifiedResponse}
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Matrix.Invoice.VerifiedResponse;
  return proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Matrix.Invoice.VerifiedResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Matrix.Invoice.VerifiedResponse}
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item;
      reader.readMessage(value,proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Matrix.Invoice.VerifiedResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item.toObject = function(includeInstance, msg) {
  var f, obj = {
    treeId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    treeAccountId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    positionId: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item}
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item;
  return proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item}
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTreeId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTreeAccountId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPositionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getTreeId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getTreeAccountId();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getPositionId();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint32 tree_id = 1;
 * @return {number}
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item.prototype.getTreeId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item} returns this
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item.prototype.setTreeId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint32 tree_account_id = 2;
 * @return {number}
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item.prototype.getTreeAccountId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item} returns this
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item.prototype.setTreeAccountId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint32 position_id = 3;
 * @return {number}
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item.prototype.getPositionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item} returns this
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item.prototype.setPositionId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * repeated Item items = 1;
 * @return {!Array<!proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item>}
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.prototype.getItemsList = function() {
  return /** @type{!Array<!proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item, 1));
};


/**
 * @param {!Array<!proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item>} value
 * @return {!proto.mlmbox.types.Matrix.Invoice.VerifiedResponse} returns this
*/
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.prototype.setItemsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item}
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.Item, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mlmbox.types.Matrix.Invoice.VerifiedResponse} returns this
 */
proto.mlmbox.types.Matrix.Invoice.VerifiedResponse.prototype.clearItemsList = function() {
  return this.setItemsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Matrix.Config.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Matrix.Config.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Matrix.Config} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Config.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Matrix.Config}
 */
proto.mlmbox.types.Matrix.Config.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Matrix.Config;
  return proto.mlmbox.types.Matrix.Config.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Matrix.Config} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Matrix.Config}
 */
proto.mlmbox.types.Matrix.Config.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Matrix.Config.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Matrix.Config.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Matrix.Config} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Config.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.mlmbox.types.Matrix.Config.Reinvest.prototype.toObject = function(opt_includeInstance) {
  return proto.mlmbox.types.Matrix.Config.Reinvest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.mlmbox.types.Matrix.Config.Reinvest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Config.Reinvest.toObject = function(includeInstance, msg) {
  var f, obj = {
    positionId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    reinvestEnabled: jspb.Message.getBooleanFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.mlmbox.types.Matrix.Config.Reinvest}
 */
proto.mlmbox.types.Matrix.Config.Reinvest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.mlmbox.types.Matrix.Config.Reinvest;
  return proto.mlmbox.types.Matrix.Config.Reinvest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.mlmbox.types.Matrix.Config.Reinvest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.mlmbox.types.Matrix.Config.Reinvest}
 */
proto.mlmbox.types.Matrix.Config.Reinvest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPositionId(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setReinvestEnabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.mlmbox.types.Matrix.Config.Reinvest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.mlmbox.types.Matrix.Config.Reinvest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.mlmbox.types.Matrix.Config.Reinvest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.mlmbox.types.Matrix.Config.Reinvest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPositionId();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getReinvestEnabled();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional uint32 position_id = 1;
 * @return {number}
 */
proto.mlmbox.types.Matrix.Config.Reinvest.prototype.getPositionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.mlmbox.types.Matrix.Config.Reinvest} returns this
 */
proto.mlmbox.types.Matrix.Config.Reinvest.prototype.setPositionId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool reinvest_enabled = 2;
 * @return {boolean}
 */
proto.mlmbox.types.Matrix.Config.Reinvest.prototype.getReinvestEnabled = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 2, false));
};


/**
 * @param {boolean} value
 * @return {!proto.mlmbox.types.Matrix.Config.Reinvest} returns this
 */
proto.mlmbox.types.Matrix.Config.Reinvest.prototype.setReinvestEnabled = function(value) {
  return jspb.Message.setProto3BooleanField(this, 2, value);
};


/**
 * repeated Group groups = 1;
 * @return {!Array<!proto.mlmbox.types.Matrix.Group>}
 */
proto.mlmbox.types.Matrix.prototype.getGroupsList = function() {
  return /** @type{!Array<!proto.mlmbox.types.Matrix.Group>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mlmbox.types.Matrix.Group, 1));
};


/**
 * @param {!Array<!proto.mlmbox.types.Matrix.Group>} value
 * @return {!proto.mlmbox.types.Matrix} returns this
*/
proto.mlmbox.types.Matrix.prototype.setGroupsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.mlmbox.types.Matrix.Group=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mlmbox.types.Matrix.Group}
 */
proto.mlmbox.types.Matrix.prototype.addGroups = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.mlmbox.types.Matrix.Group, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mlmbox.types.Matrix} returns this
 */
proto.mlmbox.types.Matrix.prototype.clearGroupsList = function() {
  return this.setGroupsList([]);
};


/**
 * repeated Tree trees = 2;
 * @return {!Array<!proto.mlmbox.types.Matrix.Tree>}
 */
proto.mlmbox.types.Matrix.prototype.getTreesList = function() {
  return /** @type{!Array<!proto.mlmbox.types.Matrix.Tree>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mlmbox.types.Matrix.Tree, 2));
};


/**
 * @param {!Array<!proto.mlmbox.types.Matrix.Tree>} value
 * @return {!proto.mlmbox.types.Matrix} returns this
*/
proto.mlmbox.types.Matrix.prototype.setTreesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.mlmbox.types.Matrix.Tree=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mlmbox.types.Matrix.Tree}
 */
proto.mlmbox.types.Matrix.prototype.addTrees = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.mlmbox.types.Matrix.Tree, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mlmbox.types.Matrix} returns this
 */
proto.mlmbox.types.Matrix.prototype.clearTreesList = function() {
  return this.setTreesList([]);
};


/**
 * repeated TreeAccount tree_accounts = 3;
 * @return {!Array<!proto.mlmbox.types.Matrix.TreeAccount>}
 */
proto.mlmbox.types.Matrix.prototype.getTreeAccountsList = function() {
  return /** @type{!Array<!proto.mlmbox.types.Matrix.TreeAccount>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.mlmbox.types.Matrix.TreeAccount, 3));
};


/**
 * @param {!Array<!proto.mlmbox.types.Matrix.TreeAccount>} value
 * @return {!proto.mlmbox.types.Matrix} returns this
*/
proto.mlmbox.types.Matrix.prototype.setTreeAccountsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.mlmbox.types.Matrix.TreeAccount=} opt_value
 * @param {number=} opt_index
 * @return {!proto.mlmbox.types.Matrix.TreeAccount}
 */
proto.mlmbox.types.Matrix.prototype.addTreeAccounts = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.mlmbox.types.Matrix.TreeAccount, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.mlmbox.types.Matrix} returns this
 */
proto.mlmbox.types.Matrix.prototype.clearTreeAccountsList = function() {
  return this.setTreeAccountsList([]);
};


goog.object.extend(exports, proto.mlmbox.types);
